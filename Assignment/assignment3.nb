(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    795029,      15644]
NotebookOptionsPosition[    786768,      15432]
NotebookOutlinePosition[    787112,      15447]
CellTagsIndexPosition[    787069,      15444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Question 1", "Subsection",
 CellChangeTimes->{{3.7024455670500083`*^9, 
  3.7024455765975485`*^9}},ExpressionUUID->"e577ea20-baa8-410d-af1c-\
b6e2bf6aad71"],

Cell[CellGroupData[{

Cell["b)", "Subsubsection",
 CellChangeTimes->{{3.7024455965781093`*^9, 
  3.7024456043931994`*^9}},ExpressionUUID->"46e7356a-21e4-4172-b7b6-\
0d277582edd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"8", "*", "x", " ", "*", "y"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", "0", ",", " ", "x"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7024458551192813`*^9, 
  3.702445896879888*^9}},ExpressionUUID->"e920ca5d-80b1-49fc-813a-\
51a5c0ad406b"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{
  3.7024458134263487`*^9, 3.7024458443332443`*^9, {3.702445880839963*^9, 
   3.7024458988992453`*^9}},ExpressionUUID->"75684016-3a60-41b9-8525-\
3fb564ac40c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["c)", "Subsubsection",
 CellChangeTimes->{{3.7024459533122253`*^9, 
  3.7024459676621075`*^9}},ExpressionUUID->"b23745f7-a750-4926-9dfc-\
2da7b7f1e3dd"],

Cell[CellGroupData[{

Cell["Integrate 8*x *y dx from y to 1", "WolframAlphaLong",
 CellChangeTimes->{{3.7024536109480915`*^9, 
  3.7024536256779003`*^9}},ExpressionUUID->"41b8d7f0-8504-4c37-b947-\
262d1ac6b784"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Integrate 8*x *y dx from y to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[8 x y, {x, y, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "y", "1"], 
                 RowBox[{
                   RowBox[{"8", " ", "x", " ", "y"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 RowBox[{"-", "4"}], " ", "y", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], 
               Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[8 x y, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    RowBox[{"8", " ", "x", " ", "y"}], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", "y"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.182", 
     "parsetiming" -> "0.641", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa9641e5h647ih81cgca100001ci9a8919a9hhhb65516317919877615598", "id" -> 
     "MSPa9651e5h647ih81cgca1000011gd2a9chie4fge6", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "43", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa9661e5h647ih81cgca1000048g02630b07dfi605516317919877615598", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.306", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "58", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 21, 20, 28.8820764`9.21320332525481}, "Line" -> 8,
     "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "Integrate 8*x *y dx from y to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {100., 106.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa9641e5h647ih81cgca100001ci9a8919a9hhhb65516317919877615598", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.70245362905046*^9},ExpressionUUID->"7a774984-7276-48ed-9105-ee9b47cc32a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["d)", "Subsubsection",
 CellChangeTimes->{{3.702453762562528*^9, 
  3.7024537671838636`*^9}},ExpressionUUID->"84b4974b-5851-40fa-9f0c-\
b0d4444976cd"],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate ",
 Cell[BoxData[
  RowBox[{"x", "*", "4", " ", 
   SuperscriptBox["x", "3"]}]],
  CellChangeTimes->{
   3.7024458134263487`*^9, 3.7024458443332443`*^9, {3.702445880839963*^9, 
    3.7024458988992453`*^9}},ExpressionUUID->
  "4e966dfd-e9d0-4853-9b74-3b0d6fc4e5a2"],
 " dx from 0 to 1"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702453847682456*^9, 3.702453883469483*^9}, {
  3.7024543440531454`*^9, 3.7024543442223577`*^9}, {3.702454604745159*^9, 
  3.702454608003582*^9}, {3.702454749648961*^9, 
  3.7024547509456277`*^9}},ExpressionUUID->"bb1fe00e-6843-40c0-87a6-\
17754ee54fde"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate x*4 x^3 dx from 0 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4 x^4, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{"x", " ", "4", " ", 
                    SuperscriptBox["x", "3"]}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["4", "5"], Identity], "\[LongEqual]", 
              TagBox["0.8`", Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[4 x^4, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1: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
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxF1Hecz3UcwPE7K84eoSR3KMTduWFvp0XW2ausEoqSUiJtRUULRYWi0EZ2
ZNNUkTYRIatBRvF8/9Ufz8fr83l/H7+77+/z/T5+Kf2H5w7Lk5CQkEjPxP+b
qT20MO3YbH+OltZP6yr+op79jfoI7/EbNc2u1O7czWt8z6XmGVqbdNJIpVZ8
hiuoQXWqcTmXUZUqVCaFZCrF36Mil1CBi7mI8pSjLBdShtK0ohujeJXv4vPu
qZTm0JW7mM238XddKxnfmS7cySx2xv9zrYS2oDMjmck3cR+uFdfmdOIOXmFH
3J9rxbQZuYzgZbbHfbtWVAfyMO+yP87FvKl25HZe4uv4juZFdAAP8Q774gzN
m2gHbmMGX8V5xPPU/jzI2/wa523eWNsznOl8GWdnnqT9eIC32BvPxryRtmMY
L7Itztm8kPblft5kTzxH84ballt5gS/imZgX1BsYxwJ+iWdu3kCfYClHyTS7
Tm9hGp9TyuwCvZ77mM/ueF/M6+tElnCEDLM2OpSpfEZJswLah7HMYxdVzOvp
BD7gMLXNWusQpvApJczy62RW8id1zXrrGN7gZyqb1dXHWczvpJtdq4N5nk8o
bpZPJ7GCP6hj1kvXcZom9vfq6/xEin0dfYxFHCLN7Bpdw0ka2t+sz/Exxezz
6ib+o4X9U7qc42Tb99S1nKKx/WjNq1cx1/pHkq2zdQNnaWY/XvPH/2eh9UFS
ra/W1Zyggf0gTdRWPGu9laLW8VuUpG3ZaP0vza2f1AJxZiyzPkaWdQ8tGM+W
j6w76T/aSO/RPPFbxBzrDvqDVtIs7R7va7xXrLfvrGe0qT6qXeN5xL3zvn1H
PaC14hy0W7x/8V7woX2u/q319SbtEj+m5PCMZXvdokX0PPdikes=
                    "]]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1: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
O/xty4b7P5JWyuc=
                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[{{0, 0}, {0, 0}}], 
                 LineBox[{{1, 0}, {1, 4}}]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {487, 1}, 3, CompressedData["
1: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
gf8DGMbIGg==
                    "], CompressedData["
1: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
84fIGA==
                    "], CompressedData["
1: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
O/xty4b7P5JWyuc=
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1: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
84fIGA==
                    "] -> CompressedData["
1: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
O/xty4b7P5JWyuc=
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[{{1, 0}, {1, 4}}]}, FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{-0.1, 1.1}, {0., 5.856399478465326}}, 
              PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", 
                    RowBox[{"15", " ", 
                    SuperscriptBox["n", "4"]}]]}], "+", 
                    FractionBox["4", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["n", "2"]}]], "-", 
                    FractionBox["2", "n"], "+", 
                    FractionBox["4", "5"]}], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["4", "5"], "-", 
                    FractionBox["2", "n"], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "2"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 2, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    RowBox[{"-", "2"}]}], "}"}], ",", "0", ",", "2", ",", 
                    "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1478645$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
1478650$$ = 0, CalculateScan`RiemannSumScanner`Private`method$1478651$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1478645$\
$, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$1478650$\
$, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$1478651$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 + 
                    0)/CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    4 $CellContext`x^4, {$CellContext`x, -0.09999999999999998,
                     1.1}, PlotRange -> {{-0.09999999999999998, 
                    1.1}, {-0.3999999999999999, 4.4}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`x^4, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[4, 5], 0.8]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[4, 5]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    4 $CellContext`x^4, {$CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/\
APkPiMNDYx8QEJ6GBMGlCS8r232GksXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu96TIxml/\
V6vp69a80Fykt7A02NrhnKWy0KQd6e5olozKdIr+Oy2NTE1e5TDD0q877o176WagfHnV/g+\
8KTgYOhXwzgzjOrJvoI8Y4muPSPFju1PJlwmwNlP+\
nRrZ3f3xcttD4OxjMAYqoTebguZZwo0TXsIdM2atxzEN398VB4/FZzH9HtBRUL1A+sdKyAWRgrgmE/\
wrZebqbuYmAFBQJELp8nJc9j2Am0UE9MxneX4xvlkbbUFBjXVnpt7JTfrFOTDv4kPZOxi8h6XtDs7A\
sPCuGT0nZXVP+dugOfXbeGVPFlNHOb3hiNvYNgx1ct0PmtdJ89I1bUu+jlXFzVfNhrk+VOm/\
l86ZNosh/G8bRh0dmRrvFp7y/A7beFljl0/F/\
d9az57Rwm4ajhUgvsoScHnUTRTHniJtk9X59bhMe5UfMfoDKlghRPZOMt+\
cf3xsAKvN4UYazfZgHREPQMimlPrIo7bPTZlZpiBgsQCz6/\
rl002lnUoAXe2rz0ThNkB5glZtzyhOUgX6g4myb78UXEruZxpMuT9QBg6pWqt6G9hfZQlV5CxDIwkx\
guaeg3msEpqBCpY9oMSJM5BMIRkv+zHffMPFyuBVO0rVJfyLA5caU7Dk+\
iXBT6kYmqy5o4dOLqC2xazieRJrbqIpenitNkc0/\
0m040bmgM9lITQkoQP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCS5i/Ff6DacnuMY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4 x^4, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    RowBox[{"x", " ", "4", " ", 
                    SuperscriptBox["x", "3"]}], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "5"]}], "5"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.484", 
     "parsetiming" -> "0.723", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa4441hage20691db2c5h00005303fga91e15052f8623300871382399906", "id" -> 
     "MSPa4451hage20691db2c5h00004bdf6cehh9038bee", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "48", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa4461hage20691db2c5h00002adeg2eiaf97ifha8623300871382399906", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.537", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "57", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 21, 39, 29.8318596`9.22725523646577}, "Line" -> 
    14, "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate x*4 x^3 dx from 0 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {428., 434.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa4441hage20691db2c5h00005303fga91e15052f8623300871382399906", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702454769885311*^9},ExpressionUUID->"821660bc-0288-46c6-b3b2-\
44e8c7f644bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "*", 
    RowBox[{"-", "4"}], " ", "y", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], TraditionalForm]], 
  "WolframAlphaFullOutput",
  CellChangeTimes->{3.70245362905046*^9},ExpressionUUID->
  "094135f4-d9dc-4c66-ad70-3c1dd2954ddd"],
 " dy from 0 to 1"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702453969654233*^9, 3.7024539716773977`*^9}, {
  3.702454046911772*^9, 3.7024540669169474`*^9}, {3.702454098865004*^9, 
  3.702454102368208*^9}},ExpressionUUID->"12207c63-cef7-43b3-abd6-\
e698528dc350"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate y*-4 y (y^2 - 1) dy from 0 to 1",
    Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[-4 y^2 (-1 + y^2), {y, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"-", "4"}], ")"}]}], ")"}], " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["8", "15"], Identity], "\[TildeTilde]", 
              TagBox[
              "0.53333333333333333333333333333333333333`5.", Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[-4 y^2 (-1 + y^2), {y, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1: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
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt1HeYyHUcwPE7LuMiEaUizh4px5097ozskT27uqQkI6EyokJRCg1F2WUr
KwrtFNppqJTRsqMoK16fR3+8nvf3+/nd3W8+l5I9qMPAHAkJCYlkJ17o+/+v
q2mWFqAj2+yTtDnTrN/kH+ra99VHWM1Bqpo11W7cz0v8RCnz1DjO9VxHFa6l
Mk3oyn0sYCcpfqeSNqYL9zKfHynpWEVtRGeGM48fKOFYBb2NCaziQJzXPFM7
MYy5fM815uW1D+NZyf64RvMM7chQ5rCD4ubl9FbG8Sr74n7MG+pkXucYNcw6
6D3M5juKmZXVqWziBHXMsvUD/ov7sn9YX+GPeE72DfSjeGfxjHncej1HSbe/
Ud/hFA3sh2gubcks62+52rqMXhLXxVbrHpqTZkyx763JtGVjPHs9rrX1Fr1J
89Gem2NGN846lqkPaS/NTStWxDvS3+Nda33NH9fLh9bdEy98iE14zDKvtmGd
9Z+kxbn0bU5S3/5ufZFvuMq+tG4hh/UNPGm9gb+pFdep73GGDPsHdTm/Ucm+
nk7iNY5Q3aydDuYFvuZKs1KaxViW8SsVzetqWwYxk+0UNU+J58UYlvILFczr
aBsGMoOvuMK8ZDx/HmAJeylvXltbM4Dn+ZLLzUvE9xvfZHxX8X7jecS1xvnj
b8bPUYTCXEYhCnIpBeJbiPdBPi4mOd4Becgdz49W3MVzfBF/z7lzaU1a0p/p
fB7nceyi+AYYzWL2UM68hrbgTp7ls7gm8yTtySgWsZuy5unanH48w6dx/fG9
ag9GspBdlDFP04ms5TDV4rvWO3iaT+LezeJ/3xO8wV9xH2bd9V1O09B+hL7M
z5S2r66bOUdj+0fjGWlr1lgfIjW+v3iO8f3wlnVX/Vfr6e1xn/F8aMFT9p30
43gfeh6ODpTv
                    "]]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1: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

                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[{{0, 0}, {0, 0}}], 
                 LineBox[{{1, 0}, {1, 0}}]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {431, 1}, 3, CompressedData["
1:eJwNkHcg1X0YxUnrVUq9VkShVAgpWnJU0jQjRaRIRtkVJSIjo0HXSvbKKsmK
+MpKRQpJKi/uvb97r31TZJTXH8/z+euc5zlH+pyz0fl5PDw8vHPzdG51Nzqo
xMW9IKLXvO5c83tBDBRu95vbvyCv7mSkS+18QdKNesTSO8uIwzcT3qeiZWR8
RKu1LqqEKKfoK2feKCF2RpbhwedLyJei6zpH1ErIS6+S8pb2YuLPp5jW9W8x
ERAV9RiNeE48tqe4vL36nHSZKlxKt3hOHsfC9uSm50Rb3O5kdXUh8ZZ8oXF/
5BkZlDVfoKJbQI5rM3n5txaQchvnv3SxAiJ4dNGI8pun5JDeybbZiSekzHgq
Pskkn8Sc1dz8n2AOeRLBY8bfk00aXtUEqT3NJuPSB3vCdLPJiT79BztCHxMh
67OTEXxZRPGBrFxlaybRrmUasVMyiYesQ56mViZpo7udGfDOIJE2AfXa42kk
h6bzw7k+jdTULV4TT0sj3HV3PLmqacSAGaWQ6JxKlttmRUywk4lctH2VTFky
0WxQGNANTiZOcgXa6euTSXyz60hKXSIRa6FVGJfGk8h507eiTOOJgPrZYx0T
D8m8hM3fTXc8JIMODX/NXsQS20TF1/GnYknvx8h73yZjSMeOM2std8WQ6oW/
956tiCK7dlnyp5pHkeJLda190zSS037f2kaDRmipmwIvVEaSZR33dB9bRJKQ
f8aFOX8iiI9LTaaDZgR5711y/6vPPVJL95e2IHdJ2RH9wu7ZOyRVjN3WezOc
xPgW2Vi/CiPh1M1fDN4wcqVolSjbP4Q4SlBZ9rW3iZV/4Y4BvtvkiMFRs+GA
ICI56J3wM+gWWXn8sNKV1/5kUbkwmVjkT7jBT3qmbt8kTd9/9f2O9CUluXfn
z/zrQ0IOVh+cJ3KduAmfsl8Q40VO07mhi8U8ic6z0LwlcVeIiq/s+2Xil4m4
7suRFfHuZL6EyQrh1W5kmD2kKpbgQgouCWSraziRYyN5Xw3+OBCWy7FljlUX
iP+PAa1AXxsi5RHmnqR1lrgNmBxz5ztNsodpz7ICTQihZ20uW65HFPvX/14r
tJfY1tzj33BuLfmx4iVTvGELwudZPU7vPoDlf0eHJS8ZonPqWQin3xSpE27r
iu0soT4Vd0bL/Rweek4pyhWex99xs6klXDtYX654zVW+iMYxiajPTs4Q2an5
rPuEKw55DscYjrvhemmiT12UB3rUZo/mtF/FystPVSU9vKBddGbV/X+vI1u1
mrps5INvri7NbK4vgk8KduU33sSLmOrqtXb+MCoV29a1/RYGO1yyHiwKgJSI
9N2FWYEoVfPirb4SBAOTjx5eOsHwp/mZDzJvQ6Loy/uM4hAUtW3ZdyYwFKyV
fRtb14XjWMS+8VLre3A72VxUtuo+YOflFOV3H53BH3v1DCPA/9qv8dVoJJwP
9EVlKUfj8RVVdtT9aPRk+e8K4EbDiF/2P6vnMVBvsd4ovj0OMyeZ5eGaj6AW
qiZwPekRnCoCz9jzJKBHUm6+Tk0CavtsdWcPJOGA+s+RMrkU9OmtXqVimgKf
C9r7soJTUBJLo0WxU7BxettOt5xULK2+7K+glI62wxNCiWpZWBmwcVbWIQtG
Vac42YlZaFV9WVm86DFaJfxsm7/McYi/bOZGDj5ESJmbN+RDsEn/QO9UPgwW
+ilfUH6CD9fofO6xc7R+nBfq8BRs8VWzp4MLwBpMNQhXKMQ2Yb4c4wOF8N9j
zSd5phCr78qW5EcWwkg5XaJlshAvXTOoFY3PcX88yzvGphg7ePIfpyaUoUdF
3e5pcRlunyUbXjaX4UvNx8xPf8pwLXA8fbHlC1Tya6U4SZVjn3Bb3K6kCujK
T4a2JlehcWBhLlVehX35Qu+m2qugrqKyRPYfAin1C2HurgQTyf0H+KWr0Zh3
UieXWw37um0HhyJrIDArsOxvQj3MkzotKuIa0XtKrcqm4x3erHlOf/j1PX75
9oZ3C37EV5lzgwfyWuF21P3JmEI71vs1e4o2fUKIRlmGn8Fn/LNgsOvsr05Y
3ow1jo3sgo3fJxVhoW8IumcuvLjkO07Jup3eq/EfeIp5POwsetDbPbhnQLEX
8Ueld0YM94KueW2HW3UfRGg89jm1fTjECYrra+jDkwcPpoya+3CNnfdya1cf
BCP/0/o11gcNpvZhzw10RIUtN/O5S0c7r7mobwQdKz0z231pdNy12aPv95CO
oD2O2gGZdHiONCiFVtFhdtyHL3qYjtg3b6qjuXR0QNgn5icdxxXzfsdO0XFs
QddQ/EIG9pSqdaZIMbBWYigvX48BT9nDJ0YMGfiokDGrYsKAv4aFUZE5A3SL
5olyOwYyk/P3NfozoCjn1NlXwkCA0lu/deUMfFeXU7CtZODuwe4bnFoGRuz0
ZEc/MFCYq+T0p5+BnVtG+MTWMPHITHCXjAwTPAFbXBTXM9HY4f5NS4GJk96/
i+y3M3HlNa9thT4TXaMyj+qNmNAU125tMWFiwaUgTYY5E7SVS0QF7JgotBBq
tLzJhEiw2l+7W0xcKzixzT2Iib18ccnB4Ux8eCzpVRDLxPCYnPy8Z0wYSR6y
WlrERImOfbRIKRM34nLnKVQysRQqX4+/YUI+dGd4Ri8TP9PpTskMJirJHcN4
FhMGv3pFIobm/rIKTfGeZELr+raAqzNM/BPdbes2O5fnnaqi3QIKr9S/lhxf
QSHUMDBOT4iC8UVl78OiFKiUW3shSWGpgGKT/CYKHRs6nqxXpJC072bEWmUK
qp7tJ0TUKJyke/fy7qUg81eubmY/hQGxj5kTOhR89NZfHDpG4ZB9ix5bn8KK
AK8tdCMK6S+axztPUnBqv/qlzZzC9hHpl+8tKbxdd8WvzobCA6y1IRconDZ7
q1PuQGHkntTSAhcKZTmNwznuFPzr3T5mXKFwtGd1UbIXBaHphuh4bwrdwq5e
0b4UslQkTkf4U3A5Wq8ZHkhhl62zdPBtCvP9Vs33D6PQHF9Led+lEF1y6c3V
CApWH0Xz3GgU5Adf3b0UQ2Fs4UVXu4cUXkqLGFsnUAjSqFa3TKbgwLm24GEa
Bd1otfZPmRRU9o+mrsiZuz+a46qbT+H3o/NaIQUUvh1eu7z+OYXq8a7vPKUU
0tKi8jTK53wMDK57Vs75/OE/UlRNQS+nXmy0dq5H05sshdcURObvLrnwlsJk
wa+AtOY5Pb+jjET7XF+l67knPlO4bdNDIrso6FeZWPD3zukcBRV1GHM6sXdT
fqy5/K5asZNDFGqkpm3VuBQy3hWruf6kcHG9Qht7isJ0p/CyzkUsdAd++Pbv
EhZqVMNy9ZexEBrOc/i1EAtiWgO3SqRZmBnMMPqxjoWeOCtppY0sZI19qspQ
YkE9q3qStpsFcePrjR80WfjDox6zdB8LdWa52wIOsXB8WbSzuwkLLpcdmYbO
LJzZP6B1wo0FvRWOj8wus6CY73Dc+joLbIb9K49gFqyM7RJikljQl2H/jk9l
QXP0gnFyBgurwy8syc5lobPW1qu8lAXDredNvrewoMXLLOhtZUGlxWYp9YmF
ZY42tcNfWXibar2Fh83CvpXnBGR52FDlWtbbqbCx23Bk6ZOtbGg/8zUeU2fD
1DWZfmMPG97cXt4HR9ho4NpoVtqwYfbDoXRFHBvWRtN/Tzxi42JhmM6jJDZ8
3fI+yWWykf5jaGz3czaGf7io2Daz4T92Jbucl4Noj6YbjfM5yP0lbdSxiIP2
iaYprgAHG2Zkjm0S56BpfstwjCoHIiIbtl225kA+xnvxLVsOINb67b49B3bi
NwLznDmokGrroF/nwGqDr5cRbc5vx+cq5XoO5HKLodTIQbIkrVrxHQe0eYY1
mz5y4NP0tl72OwcGVlVNor84+Bmc0TW7rh9OU7fM/27oB/viuW8z8v34brim
e1KlHw0Scb1jGv2IexrOZhn3Q/Oz+3hLQD9av56zXn67Hxd6DD/ohfXjPkc5
pzmiH33TAxbvEvsRtNamvqGsH+/tjWmVg/04M7NNNdd4AH+lOQrPTQeQeDBh
fYXZALojF6x6ZzUAy00ds/0X53jiarN84ABOF7ywyykewCkbzaRskUEIreYL
/LFqEO/bXjvslhzEvv2G6s2yg5CXsWkeVRnE9H8h09uPDiLB/JNpg+8geo0u
CtLZg2h72JF2sHQIietD7FquDmNC3WpL5KER0OqJ8MsFozj3aChN+/worpZs
LupvGsUkd4VF6mYuGHWcnUbKXLyPeSUybwsXqXtcP5zdxsWxkA/7pXdzkbj2
nnzyIS609Zf+TrDmQkmG0a57nguxXxXP/thyMfTQ0dHCgYto6m33alcuODdC
6uN9uGg3OJt69CYXVbI7faf9uIh8w95hHsiFhvChPPFwLuTYa0Le3uFCsGLi
/LV7XDCtstZ0RXLxYavvTAiNi/KFpl92RnOR/kWphBPDxd28hQ/i4rj4H1te
A/g=
                    "], CompressedData["
1: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

                    "], CompressedData["
1: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

                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1: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

                    "] -> CompressedData["
1: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

                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[{{1, 0}, {1, 0}}]}, FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{-0.1, 1.1}, {-1.0163996939755262`, 
               0.9999999925062558}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "4"]}], "-", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["n", "2"]}], "+", "1"}], ")"}]}], 
                    RowBox[{"15", " ", 
                    SuperscriptBox["n", "4"]}]], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["8", "15"], "-", 
                    FractionBox["2", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["n", "2"]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 4, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["8", "15"], ",", "0", ",", 
                    RowBox[{"-", 
                    FractionBox["2", "3"]}]}], "}"}], ",", "0", ",", "4", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$280605$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
280610$$ = 0, CalculateScan`RiemannSumScanner`Private`method$280611$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$280605$$\
, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$280610$$\
, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$280611$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 + 
                    0)/CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    
                    Plot[((-4) $CellContext`y^2) (-1 + $CellContext`y^2), \
{$CellContext`y, -0.09999999999999998, 1.1}, 
                    PlotRange -> {{-0.09999999999999998, 
                    1.1}, {-0.09999999999999998, 1.1}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[8, 15], 0.5333333333333333]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[8, 15]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    
                    ReplaceAll[((-4) $CellContext`y^2) (-1 + \
$CellContext`y^2), {$CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7+MfIPEZsYFASEiIvTAmDShJ+\
d5b7DQWrh1sZxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/xkYzSfq/X01et+SA5SW/\
g6ZE1O3Kay0KQvdNcUa2ZFOkVfHbbmpiaXcrhByXed92a91JNwfjzG3wfeFJwMPSrYZwZRvV4X0Ges\
UTXnqFix/YnYy4T4OwnfbL16vXLZ5seBUMZgjFUCf28LWKeKdA07SHQNWu2OYhv/\
rhRHj8VnMf0e0FFQvUD6x0pIBZGCuCYTvCtl5qou5iXAUFAkQtnyYlzu+\
0F2igmJiM6zfGNc7nabIsLaqI9NfdKalbpx0d/Ex/I2IXkPS5nd3b8hYVxudg7K6p/Tt0Az2/\
bwit5spQ3TO8dR9rAsGOqF9l82rpKnpCqZV3wM6ouaLasNcbzJ0z9j3TItFkMY6ttGHR6ZCu8XHmL8\
C/awsscW34m7fvWfPaOEnDZZKjk9lGSgs+\
iaKY88AJtn67OrcNj3Kn4jtEZUsEKJ7Jxlt3iuuNhBV7vCDHWbrwG6Yh6AkQ0p9ZFHLe7bMLMTgYKE\
gs8u65f9thI1qEE3Nm+9kwQZseXJ2TV2oTmIJ2rO5gk+/\
JHxa3kcqbJkPcDYeiEqpWiv4X1UZZcQUYyMJIYL2jqNZjDKqkhqGDZD0qQOAfBEJL9sh/3zT+\
crwRSta9QXcqzOHClOQ1Pol8W+\
JCKicma23Xg6ApuW8wmkie16iKWpvPTZn1M95tMN25oDvRQEkJLEj7Quz2h2xP+\
4p6wsAN3S0K3JHRLQrckdEvC/7skuIjxX+k3QoW23g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[-4 y^2 (-1 + y^2), y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"-", "4"}], ")"}]}], ")"}], " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], HoldForm], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["y", "5"], "5"], "-", 
                    FractionBox[
                    SuperscriptBox["y", "3"], "3"]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.725", 
     "parsetiming" -> "0.882", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa16981i9fgffh66he72c600000igf50i63a3g6g6g4820211610743569143", "id" -> 
     "MSPa16991i9fgffh66he72c6000024426hf1aie3f7ed", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "57", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa17001i9fgffh66he72c600004062i9981b4053814820211610743569143", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "1.738", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "55", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 21, 28, 26.7102519`9.179252902044816}, "Line" -> 
    11, "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate y*-4 y (y^2 - 1) dy from 0 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {426., 432.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa16981i9fgffh66he72c600000igf50i63a3g6g6g4820211610743569143", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7024541067727766`*^9},ExpressionUUID->"7fe69913-33ac-47e1-8594-\
7852b7a68f6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(integrate ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["x", "2"], "*", "4", " ", 
   SuperscriptBox["x", "3"]}]],
  CellChangeTimes->{
   3.7024458134263487`*^9, 3.7024458443332443`*^9, {3.702445880839963*^9, 
    3.7024458988992453`*^9}},ExpressionUUID->
  "5e585646-2ea3-49ac-8cda-9e92642d20a6"],
 " dx from 0 to 1 ) - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "/", "5"}], ")"}], "2"], TraditionalForm]],ExpressionUUID->
  "78288e84-089f-4f8d-9e21-093dce154034"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702454367402088*^9, 3.7024543741516438`*^9}, {
  3.7024547817498856`*^9, 
  3.7024548215753894`*^9}},ExpressionUUID->"c34b6a52-a94d-41f9-9ac7-\
4ea9a53bff71"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "(integrate x^2*4 x^3 dx from 0 to 1 ) - (4/5)^2", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[x^2 4 x^3, {x, 0, 1}] - (4/5)^2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{
                    SuperscriptBox["x", "2"], 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], "4", " ", 
                    SuperscriptBox["x", "3"]}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                  FractionBox["4", "5"], ")"}], "2"]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["2", "75"], "\[TildeTilde]", 
              "0.02666666666666667`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Computation result", "scanner" -> "Integral", "id" -> 
     "ComputationResult", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", "1"], 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", "4", " ", 
                    SuperscriptBox["x", "3"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    FractionBox["4", "5"], ")"}], "2"]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["2", "75"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "1.5010000000000001", "parsetiming" -> "1.054", "parsetimedout" -> 
     "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa839210455540h05g0h200004c363idc1aeb4f4a7298593869011187352", "id" -> 
     "MSPa840210455540h05g0h20000650418513i76gd70", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "64", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa841210455540h05g0h200002hdd46699c1900617298593869011187352", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.216", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "40", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 21, 40, 26.1646421`9.170289716748181}, "Line" -> 
    16, "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "(integrate x^2*4 x^3 dx from 0 to 1 ) - (4/5)^2"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {137., 143.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa839210455540h05g0h200004c363idc1aeb4f4a7298593869011187352", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7024548261988297`*^9},ExpressionUUID->"e6b9ff86-d55f-42d2-9142-\
f43d2d0693e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["y", "2"], "*", 
    RowBox[{"-", "4"}], " ", "y", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], TraditionalForm]], 
  "WolframAlphaFullOutput",
  CellChangeTimes->{3.70245362905046*^9},ExpressionUUID->
  "009e7bfd-e60d-4edc-b364-56a84a7e0b87"],
 " dy from 0 to 1) - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"8", "/", "15"}], ")"}], "2"], TraditionalForm]],ExpressionUUID->
  "da2eff28-da62-4f18-af06-12a3d1e10ecc"],
 " "
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702454909690323*^9, 3.7024549474642534`*^9}, {
   3.702462375406103*^9, 3.7024623931081944`*^9}, {3.7024624240582037`*^9, 
   3.702462430815421*^9}, 
   3.7024624709465528`*^9},ExpressionUUID->"4db21884-dd0c-419c-97b0-\
d0fc460df016"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "(integrate y^2*-4 y (y^2 - 1) dy from 0 to 1) - (8/15)^2", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[(y^2*-4) y (y^2 - 1), {y, 0, 1}] - (8/15)^2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["y", "2"], 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], 
                    RowBox[{"(", 
                    RowBox[{"-", "4"}], ")"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ], ")"}], 
                    " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], "-", 
               SuperscriptBox[
                RowBox[{"(", 
                  FractionBox["8", "15"], ")"}], "2"]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["11", "225"], "\[TildeTilde]", 
              "0.04888888888888889`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Computation result", "scanner" -> "Integral", "id" -> 
     "ComputationResult", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", "1"], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["y", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"-", "4"}], ")"}]}], ")"}], " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["y", "2"], "-", "1"}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}], "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    FractionBox["8", "15"], ")"}], "2"]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["11", "225"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.643", 
     "parsetiming" -> "1.182", "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22411i03g359dc4bh1hf00000cf70hc5ba9687bh&s=12", "id" -> 
     "MSPa22421i03g359dc4bh1hf00002673h6aib9ebf3bb", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "12", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa22431i03g359dc4bh1hf000046g7abhf6706h3hf&s=12", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.166", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www3.wolframalpha.com", "server" -> "12", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 23, 47, 55.638407`9.497949526227638}, "Line" -> 
    27, "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "(integrate y^2*-4 y (y^2 - 1) dy from 0 to 1) - (8/15)^2"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {137., 143.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa22411i03g359dc4bh1hf00000cf70hc5ba9687bh&s=12", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702462475785486*^9},ExpressionUUID->"24777a0a-a0b8-45c6-a369-\
f1a139a105a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(integrate (integrate x y * 8 x y dy from 0 to x) dx from 0 to 1) - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "/", "5"}], "*", 
    FractionBox["8", "15"]}], TraditionalForm]],ExpressionUUID->
  "dfda94ad-9d8e-48f2-96e8-2ea6902bb41b"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.7024620959755483`*^9, 3.7024621624156256`*^9}, {
  3.7024621979717574`*^9, 3.7024622038726645`*^9}, {3.7024624816708603`*^9, 
  3.7024624887635584`*^9}},ExpressionUUID->"96535875-0120-475e-bd6d-\
516aec787b2f"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "(integrate (integrate x y * 8 x y dy from 0 to x) dx from 0 to 1) - \
4/5*8/15", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[x (y 8) x y, {x, 0, 1}, {y, 0, x}] - (4/5) (8/15)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", "x"], 
                   RowBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"y", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], "8"}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ], ")"}], 
                    " ", "x", " ", "y"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "-", 
               RowBox[{
                 TagBox[
                  FractionBox["4", "5"], 
                  PolynomialForm[#, TraditionalOrder -> False]& ], 
                 StyleBox["\[Times]", 
                  GrayLevel[0.6]], 
                 TagBox[
                  FractionBox["8", "15"], 
                  PolynomialForm[#, TraditionalOrder -> False]& ]}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["4", "225"], "\[TildeTilde]", 
              "0.017777777777777778`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Computation result", "scanner" -> "Integral", "id" -> 
     "ComputationResult", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", "1"], 
                   RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "x"], 
                    RowBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "8"}], ")"}], " ", "x", " ", "y"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "-", 
                 FractionBox[
                  RowBox[{"4", " ", "8"}], 
                  RowBox[{"5", " ", "15"}]]}], HoldForm], "\[LongEqual]", 
              TagBox[
               FractionBox["4", "225"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.493", 
     "parsetiming" -> "1.5230000000000001", "parsetimedout" -> "false", 
     "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12701f7g8e927f1e3g760000561i5fghg8be2cif&s=31", "id" -> 
     "MSPa12711f7g8e927f1e3g7600001h0g0348e44ib087", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "31", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa12721f7g8e927f1e3g7600005g79a42e39h80ggg&s=31", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.581", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www3.wolframalpha.com", "server" -> "31", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 4, 29, 23, 48, 13.4766033`8.882155398278602}, "Line" -> 
    28, "SessionID" -> 18266134475289563787}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "(integrate (integrate x y * 8 x y dy from 0 to x) dx from 0 to 1) - \
4/5*8/15"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {137., 143.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12701f7g8e927f1e3g760000561i5fghg8be2cif&s=31", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702462493684616*^9},ExpressionUUID->"a26931a8-80d1-41c5-a6e3-\
ca0b5e4e1ac8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  FractionBox["4", "225"], 
  RowBox[{
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     FractionBox["2", "75"], ")"}]}], "*", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     FractionBox["11", "225"], ")"}]}]}]]], "Input",
 CellChangeTimes->{{3.7024625112905073`*^9, 3.702462523088619*^9}, {
  3.7024625802957926`*^9, 3.7024626224691315`*^9}, {3.7024626613535*^9, 
  3.702462664581997*^9}},ExpressionUUID->"162a15f2-93b5-4439-a15c-\
a86e51072129"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SqrtBox[
   FractionBox["2", "33"]]}]], "Output",
 CellChangeTimes->{
  3.7024626676181154`*^9},ExpressionUUID->"76f09f4b-8ca4-429a-8306-\
7e25c8ec062b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"2", " ", 
   SqrtBox[
    FractionBox["2", "33"]]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"7a45d87b-b1b5-4597-80f9-a6f6d64ecd62"],

Cell[BoxData["0.49236596391733095`"], "Output",
 CellChangeTimes->{
  3.7024626747128215`*^9},ExpressionUUID->"6da0f2be-bdc2-4715-a764-\
7bf5c1ddeac9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["e)", "Subsubsection",
 CellChangeTimes->{{3.7024631318969145`*^9, 
  3.7024631328612795`*^9}},ExpressionUUID->"ce86f74a-7b6b-491a-878b-\
2e5bf45fec9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   RowBox[{"8", " ", "x", " ", "y"}], 
   RowBox[{
    RowBox[{"4", "y"}], "-", 
    RowBox[{"4", 
     SuperscriptBox["y", "3"]}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.702463138928422*^9, 3.702463170282126*^9}, {
  3.7024632204064283`*^9, 
  3.702463231012411*^9}},ExpressionUUID->"74932f27-5ca5-4714-8569-\
21f2835433ee"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["y", "2"]}]]}]], "Output",
 CellChangeTimes->{3.702463173795014*^9, 
  3.7024632367560625`*^9},ExpressionUUID->"5e0210ed-2da3-41ee-a0f6-\
e4930d4e4ed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "x"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", "2"], ")"}], "2"]}]]], "Input",
 CellChangeTimes->{
  3.7024632346059036`*^9, {3.7024633949566164`*^9, 3.7024634058702717`*^9}},
 NumberMarks->False,ExpressionUUID->"5c9c8d10-daae-4645-b45f-4e4d1f67223c"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"8", " ", "x"}], "3"]}]], "Output",
 CellChangeTimes->{3.702463177614669*^9, 
  3.702463406645486*^9},ExpressionUUID->"675f53b6-1281-4ae2-9872-\
58d7817ce111"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["f)", "Subsubsection",
 CellChangeTimes->{{3.702768256813504*^9, 
  3.7027682735014896`*^9}},ExpressionUUID->"44898d21-a4dd-4181-adda-\
531992b54da8"],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", "x"}], 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "2"], ")"}], "2"]}]], "dx", " ", "from", "  ", 
    FractionBox["1", "2"], " ", "to", " ", 
    FractionBox["3", "4"]}], TraditionalForm]],ExpressionUUID->
  "ea7e6062-84eb-4c1d-95f3-28ce10b6d456"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702768279905504*^9, 3.702768328657561*^9}, {
  3.7027683587215147`*^9, 3.702768373849511*^9}, {3.7027684598624043`*^9, 
  3.702768472822361*^9}, {3.702768511446337*^9, 
  3.7027685365703726`*^9}},ExpressionUUID->"56502948-c756-496b-a4b3-\
70ab7782e674"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "integrate (2 x)/(1 - (1/2)^2) dx from  1/2 to 3/4", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(8 x)/3, {x, 1/2, 3/4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  FractionBox["1", "2"], 
                  FractionBox["3", "4"]], 
                 RowBox[{
                   FractionBox[
                    RowBox[{"2", " ", "x"}], 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "2"], ")"}], "2"]}]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["5", "12"], Identity], "\[TildeTilde]", 
              TagBox[
              "0.41666666666666666666666666666666666667`5.", Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(8 x)/3, {x, 1/2, 3/4}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1:eJw1lHswlQkYxg9KLpVCS7o4UsPGFoONlEcmRcJmE1nlkqSSOlJbSiEktusU
SnaEbZWs2hRSrVCnbKxcqnN0+c71c2o70p6Lc/3225n1zrzzzPPPM+/8npnX
IXF3xFZDBoMRTu9/auf9gBYC3Wu00ZGRckxLDrf0cCYwo9C6Q1okR1L+w3b2
9wTcJumjzR7LoZ6UPufgYQKhdwKc1mrkOJ6+2n5zDQFTqenRLDcFWD2qRzV/
EShJqTJ036HAzyc/TzUZI+BsWfLQrFIBZ79O7XNHHop0MVeTuQrUvmw5+ziM
9nurbH63UmJn3z+93P08nLINfOQYrETxH2a31lXxkEQ1l9gcU0Jqkewr6uJh
+YzCGvcWJVYHCVJvfOGh8Q7H11eqhJ61HINz+NCVavVPnMag1A+12q3iI/ha
pvrApjGEZUVxHrH4SNE+c6gvHUO5QFZx+TIf87nlfb29Y1hY/3Ly+U4++OKn
rXbGKtikXJj9aYSPDC92rxgqrCooe5loK4DJbeZczj4V+i8ccF+6UoC09JDS
0JsqbDiZ6RG4W4D0+2MXb0lUmDXc9j61VICDXgaDvvZq+HkKXRXtAkR85voG
bVSjWhAy//JHARZxLYYyT6tBZQ6277MS4loY26iiU41mo2WGt/yEkE/4LnqF
Xo3GEfFHk21CBH7wEJl7ajClO21/+zkhkqdLKqLTNIg9Z1vb8ECIBR1M4vyv
GkjvGee1iIQYrr4do3yjwduBF4wF00U4/MTG4M1XWlhE8JzqfUSwtn31XrxW
iyVNloqUBBGCZbZBvBwtHkxx2FrwkwjrLF3fbGrVIp+990hbowixcZdqGaNa
1KVXe8cSIvhIOZULXHSwyrGpsDYVY+aNjBd7EnRg/Vhfy3AXo0R2triuRIdv
4piRYbFiiI9ks1J6dXC5/qquOU8MH++u0yHGehwX76zOuynGZg8R56a/Hhyz
eQF5Q2I4tOTWT8zUI+3c7OJKIxLDuw61ZDfoEW8uy5i7mER2UuBolkSPC6SF
aUsUidlFOxKu2FNoqwtdefwoicillj80rqcQlJDCbLpOIt61ODv4FAWrTPZV
o34SaaFx7yZ0UhCzA3QURaLQbKOWoijMCC8ommlNgLXdZOq8PXJomRP7ciQk
1C6xuwz5FMo6rjyZbEaAGZN7uzVRjsLQ5PsB70jcuf/2F6N+CixZNdkmI7Gi
nOtpMEqBk9WQZDyRwP4IFJjEytEjKHGvfk3CMn9uQN6fFO4WDcQ6jJCo2DLr
RY6EguvmvenxahKivotl2WMU1DF3PY4ZEqjqqRj5LVqOz4sWp/YPkvCX+J3p
ZNP5g6ml6/4m8Zzta98uohB2zbz+jJLOX3JP3CajYGo1tMRNR+Ju2sE1/loK
Rc98ylcYEGieHDrfMEqO3PWHTuwcIBE9K7xJ+JjCDk1zo+QDCb4qZBVfQIHo
iepyVpBYuL1rCu8LhUveTpFPNSS6K0+w4tUUDnw6ZVemJ1G5bLsjU0+hL1vT
U0n/l/a6mocuG+RYs82hrInmnej5qktG8/aYGtfhRedLLQc2fqF51vJ0rzPk
JLxyIxxGaV5bQrq3WNP5nJbp+XtUFPwZXl8L6fuvR45+66aj0MAdNl9L93Xe
kWcxje5r/J8x/p/xPsf9vydumLs=
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 
                    63, 68, 74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 
                    49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
                    35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
                    21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
                    71}}]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1:eJwVx3s0lHkAh/GfdpOlIpFEbRzdVLrtbkh9XzUTRSW2KFqRGbQkyi4RIUXJ
ZYtUoyKHpNqhZqtd0sVlSUoXZ+LMmKt5s7W6zIwxY7SzfzznOR+H8Dh/1jhC
yCZD/z8hYCSGzRaifGWVN4OhxE9R8wPpSCHOMPcXMJlK+BwO9NwbLcTxAPee
9euVcKrmWe+LESI2rmvPBm8lerTx9xMThHCrVqdt9lXCrWLQPDtNiOfTvHhB
PypBPvbVXykRgqgVDrERShTk39eIWoUIvb1AV3xUic8TS4yTl/TD99bk3/06
lGi+PuWGY1E/+DPDDsSYqbAxuVYm/tCPYzr7dZ4+KpxsXrgldJEIEcHuVumF
KswTBCT1hIggnNuimtmtQqRNdnhIkQi5B+v4c2zUMIpiWr9vFmH79xPaBoLV
2NoeeMZYJcLDsI4WE44aTN8Dr1wWiBFiMdRyWqzGUL9I1L9DjDPOGT3pjsNQ
5gp4F3LF+HAn9ZNT+DA426Q+7EYxDrW9MV9RPQztslU3770Xo2Jt5eoKxTBG
l3C67Rwl0OJ5zKHFGgQx8hpztkmQyGVVmyVosDe6KzEtW4JTeVGf9HUazOba
DmXek+D1YOeaHcMa5E24853FoAR/3r54wdp1BJwju1ZdnyXFc/JixD1tBMYW
p00D/KUwebBvj+3jEczlzqjKzJRCMJgkCPpKi8H42nEP/5BCclYWZLRBiwhG
/sIchRTZ3EaZ6Qkt3BaTmTttZPD1IKlP27WoW5nyzN1HBs+NlVYjk3Xo9/fe
XJkiw6vHvMbsLTrUFczKt+fKUNI0PyqlWAeBJKvkklSGVJfxs5x7dWhav+rn
2qlyjJlskbnNGAWzU0daveSoY2lr60NHkRE+eU90khxGLlOP5l0exXRz7imb
q3IkRhdHfisahb9gZ/KrPjmmz0v2tZujx9qGwGUzJg4gyK/DM4mlR0/Drmv7
qAH8rUt1XVOrx+wu3pBP/ABeW5aB9U6PFhVHv6J8AMZlc/2Zi8YwCac6nV8P
gF0zhZ0fPwazc88ir41XIMJh7wnX+jHcsLJrdnVXoMjOieujGUNNlYrujlVA
nOMltln9BcEbHHs/lynQFcZ3ZB7+grpJQXlOLxR419DB6nv0BY2SflPhOBov
PYtD3hoRyqlLvbViOY1HwpGTDx0I5dI3bWcim0a7h7nHZgah/tXkuHSX0Ljo
F3zwZAShIiRK+5qzNEo9r0TZsQj15slus4xSGoXL/wmpNbj5oiu99DyNTKsU
5hM2oc4x6PLCMhps/vlpZtGEYhR6WftV0li8u/fuiVhCnZ9nPNpVR6Mhboc+
9xdCWUxJGKyqp8HbXf7R9ldCZWsF/LRbNG5ufSuvMXj/Ux7PhUfj8orkrvYk
QjEPsOLy79LIGi699E0KoT7cb5ZsaqKxMZ3vmZtOKPbVpd1zHtBg7J/9g+0R
QvUVcZr0BnuERTnXGNwacZBz4xENl3Uay/YMQnFMnbZPaqVhOWG6zOQooSyV
BQy5wRM1ofxSg48LdMsb22h8/ba6c342oRK4L81j22moO1byvI8RSnEOY4wO
GkN/pdfwDQ7Jqn1n/4QGfb2tLOo4oV7E2PQpDRaXmf+mMdhre1Z7ZyeN3vzA
Yzk5hPoPfBZtPQ==
                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[
                  NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[4, 3]}}, {{0.5, 0}, {0.5, 
                    1.3333333333333333`}}]], 
                 LineBox[
                  NCache[{{
                    Rational[3, 4], 0}, {
                    Rational[3, 4], 2}}, {{0.75, 0}, {0.75, 2}}]]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {77, 1}, 3, CompressedData["
1:eJwNx2lIk3EAx/EptMAjtbKVmphYVtY8CvJ48auYWS0rJzozrTCdRx6pCYok
qYyUPCksbRaamDqNaawSnFashbkmM5Nq7Nn27PozMg1nmEe0F18+fPdkFPGy
nBkMhpOjeEcliX/zBQIKV3L280k2Be5t/om8XApBz6XehfkU5laLx8tKKER1
2zyEVRQYvzUjz9ooNDeNr+gVFJbc2pgVoTrIB72GAlt1OFshNhkWdbgnD7lw
9ZAewdrE8rk0PbJZwoy0Vj2ccmK95+V6JEzyHzCX9Yg9VzrLPmDAgk6v110y
wF6vlT6uN0CUZOQKZAashse8GJ03YD1UpPYNpJHCaZDVJdHIy1WVVQlpBEh2
LdSM0mjY/Pqop42G6E56zKC/EUzP+y6JPCP2SXx6a2qMsBWLnd+9MiKT0xRS
ZzUi6jBjdyrLhOFjldPRXBN0vNPneyod3+zf5CcxQUvXtj01mjBxKuaGeJsZ
sco1hiLOjOqMLddzy83Y6SFpZPWZwdOmVsxqzDg5xg/3cbNgbix9oPC4BQEq
6QK32IIPy6KNI10WuKNRefCrBa7t09kDm6wY2u4rj4y2or93magLrLh8JvDH
UqcVw+4pDUEzVshonQvlTBCk+pPQHUHA1uxILRMQ/FqpY6vbCDJpu1//Q4Lv
U9dcqx8RyJ9EkrAOgnYO6WrpJOC0xHlf7CHoCGauq4YJPL1KbL0jBMJV7beq
lwQ3P0ulbClBbGlWUdMbgsVxOR0/QSDoC1PvfUugaRVNbDhUZN4SDb0nELkE
JbsrCLbamzlmh3e1axGyjwQlki8eBZME1nb843wiSKsV//SbIpjJZ2nsDuOS
ayeVSoL/Ls5HiQ==
                    "], CompressedData["
1:eJwNx2lIk3EAx/EptMAjtbKVmpisrCyvgjxe/Cq2rJaVikemFabzyCNngiJJ
KiMlT4qVNgtNTJ3GNFYJTivWwlwTzaQae7Y9u/6MTMMZ5hHtxZcP3z2ZxQnZ
TgwGI86RIPFvAZ9P4Uru/hSSQ4F3O+VEfh4F9nOZd1EBhbnVkrEyAYWoLpuH
sIoC47dm+JmIQnPT2IpeSWHJTcSsCNVBMeA1GNiqw9kKicmwqMM9RfCFq4f0
CNImls+l65HDEmamt+rhlMv1nlfoET+R8oC5rAf3XOlsyAEDFnR6ve6SAfZ6
rexxvQHiJCOPLzdgNTzmxci8Aeuh4mnfQBqpnAZ5XRKN/Dx1WZWQRoB010LN
CI2Gza+PetpoiO9kxAz4G8H0vO+SmGDEPqlPT02NEbYSifO7V0ZkcZqC66xG
RB1m7E5jmTB0rHIqmmeCLuH0+e5Kxzf7N/lJTdDStaKnRhPGT8XckGwzg6ta
YyhjzajO3HI9r9yMnR7SRlavGQnatIpZjRknR1PCfdwsmBvN6C86bkGAWrbA
K7Hgw7J440inBe5oVB38aoFr21RO/yYrBrf7KiKjrejrWSbThVZcPhP4Y6nD
iiH31Ab2jBVyWudCOROw1X/iuyIIQjQ70sr4BL9W6kKmRQRZtN2v7yHB98lr
rtWPCBRPIklYO0Ebh3S2dBBwWmK9L3YTtAcx19VDBJ5eAlvPMIFwVfut6iXB
zc8yWYiMgFuaXdz0hmBxTEHHjRPwe8Om974l0LSKxzccKrNuiQffE4hd2Mnu
SoKt9maO2eFd7VqE/COBQPrFo3CCwNqGf5xPBOm1kp9+kwQzBSyN3WFscu2E
SkXwHyM+R4c=
                    "], CompressedData["
1:eJwVx3s0lHkAh/GfdpOlIpFEbRzdVLrtbkh9XzUTRSW2KFqRGbQkyi4RIUXJ
ZYtUoyKHpNqhZqtd0sVlSUoXZ+LMmKt5s7W6zIwxY7SzfzznOR+H8Dh/1jhC
yCZD/z8hYCSGzRaifGWVN4OhxE9R8wPpSCHOMPcXMJlK+BwO9NwbLcTxAPee
9euVcKrmWe+LESI2rmvPBm8lerTx9xMThHCrVqdt9lXCrWLQPDtNiOfTvHhB
PypBPvbVXykRgqgVDrERShTk39eIWoUIvb1AV3xUic8TS4yTl/TD99bk3/06
lGi+PuWGY1E/+DPDDsSYqbAxuVYm/tCPYzr7dZ4+KpxsXrgldJEIEcHuVumF
KswTBCT1hIggnNuimtmtQqRNdnhIkQi5B+v4c2zUMIpiWr9vFmH79xPaBoLV
2NoeeMZYJcLDsI4WE44aTN8Dr1wWiBFiMdRyWqzGUL9I1L9DjDPOGT3pjsNQ
5gp4F3LF+HAn9ZNT+DA426Q+7EYxDrW9MV9RPQztslU3770Xo2Jt5eoKxTBG
l3C67Rwl0OJ5zKHFGgQx8hpztkmQyGVVmyVosDe6KzEtW4JTeVGf9HUazOba
DmXek+D1YOeaHcMa5E24853FoAR/3r54wdp1BJwju1ZdnyXFc/JixD1tBMYW
p00D/KUwebBvj+3jEczlzqjKzJRCMJgkCPpKi8H42nEP/5BCclYWZLRBiwhG
/sIchRTZ3EaZ6Qkt3BaTmTttZPD1IKlP27WoW5nyzN1HBs+NlVYjk3Xo9/fe
XJkiw6vHvMbsLTrUFczKt+fKUNI0PyqlWAeBJKvkklSGVJfxs5x7dWhav+rn
2qlyjJlskbnNGAWzU0daveSoY2lr60NHkRE+eU90khxGLlOP5l0exXRz7imb
q3IkRhdHfisahb9gZ/KrPjmmz0v2tZujx9qGwGUzJg4gyK/DM4mlR0/Drmv7
qAH8rUt1XVOrx+wu3pBP/ABeW5aB9U6PFhVHv6J8AMZlc/2Zi8YwCac6nV8P
gF0zhZ0fPwazc88ir41XIMJh7wnX+jHcsLJrdnVXoMjOieujGUNNlYrujlVA
nOMltln9BcEbHHs/lynQFcZ3ZB7+grpJQXlOLxR419DB6nv0BY2SflPhOBov
PYtD3hoRyqlLvbViOY1HwpGTDx0I5dI3bWcim0a7h7nHZgah/tXkuHSX0Ljo
F3zwZAShIiRK+5qzNEo9r0TZsQj15slus4xSGoXL/wmpNbj5oiu99DyNTKsU
5hM2oc4x6PLCMhps/vlpZtGEYhR6WftV0li8u/fuiVhCnZ9nPNpVR6Mhboc+
9xdCWUxJGKyqp8HbXf7R9ldCZWsF/LRbNG5ufSuvMXj/Ux7PhUfj8orkrvYk
QjEPsOLy79LIGi699E0KoT7cb5ZsaqKxMZ3vmZtOKPbVpd1zHtBg7J/9g+0R
QvUVcZr0BnuERTnXGNwacZBz4xENl3Uay/YMQnFMnbZPaqVhOWG6zOQooSyV
BQy5wRM1ofxSg48LdMsb22h8/ba6c342oRK4L81j22moO1byvI8RSnEOY4wO
GkN/pdfwDQ7Jqn1n/4QGfb2tLOo4oV7E2PQpDRaXmf+mMdhre1Z7ZyeN3vzA
Yzk5hPoPfBZtPQ==
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1:eJwNx2lIk3EAx/EptMAjtbKVmpisrCyvgjxe/Cq2rJaVikemFabzyCNngiJJ
KiMlT4qVNgtNTJ3GNFYJTivWwlwTzaQae7Y9u/6MTMMZ5hHtxZcP3z2ZxQnZ
TgwGI86RIPFvAZ9P4Uru/hSSQ4F3O+VEfh4F9nOZd1EBhbnVkrEyAYWoLpuH
sIoC47dm+JmIQnPT2IpeSWHJTcSsCNVBMeA1GNiqw9kKicmwqMM9RfCFq4f0
CNImls+l65HDEmamt+rhlMv1nlfoET+R8oC5rAf3XOlsyAEDFnR6ve6SAfZ6
rexxvQHiJCOPLzdgNTzmxci8Aeuh4mnfQBqpnAZ5XRKN/Dx1WZWQRoB010LN
CI2Gza+PetpoiO9kxAz4G8H0vO+SmGDEPqlPT02NEbYSifO7V0ZkcZqC66xG
RB1m7E5jmTB0rHIqmmeCLuH0+e5Kxzf7N/lJTdDStaKnRhPGT8XckGwzg6ta
YyhjzajO3HI9r9yMnR7SRlavGQnatIpZjRknR1PCfdwsmBvN6C86bkGAWrbA
K7Hgw7J440inBe5oVB38aoFr21RO/yYrBrf7KiKjrejrWSbThVZcPhP4Y6nD
iiH31Ab2jBVyWudCOROw1X/iuyIIQjQ70sr4BL9W6kKmRQRZtN2v7yHB98lr
rtWPCBRPIklYO0Ebh3S2dBBwWmK9L3YTtAcx19VDBJ5eAlvPMIFwVfut6iXB
zc8yWYiMgFuaXdz0hmBxTEHHjRPwe8Om974l0LSKxzccKrNuiQffE4hd2Mnu
SoKt9maO2eFd7VqE/COBQPrFo3CCwNqGf5xPBOm1kp9+kwQzBSyN3WFscu2E
SkXwHyM+R4c=
                    "] -> CompressedData["
1:eJwVx3s0lHkAh/GfdpOlIpFEbRzdVLrtbkh9XzUTRSW2KFqRGbQkyi4RIUXJ
ZYtUoyKHpNqhZqtd0sVlSUoXZ+LMmKt5s7W6zIwxY7SzfzznOR+H8Dh/1jhC
yCZD/z8hYCSGzRaifGWVN4OhxE9R8wPpSCHOMPcXMJlK+BwO9NwbLcTxAPee
9euVcKrmWe+LESI2rmvPBm8lerTx9xMThHCrVqdt9lXCrWLQPDtNiOfTvHhB
PypBPvbVXykRgqgVDrERShTk39eIWoUIvb1AV3xUic8TS4yTl/TD99bk3/06
lGi+PuWGY1E/+DPDDsSYqbAxuVYm/tCPYzr7dZ4+KpxsXrgldJEIEcHuVumF
KswTBCT1hIggnNuimtmtQqRNdnhIkQi5B+v4c2zUMIpiWr9vFmH79xPaBoLV
2NoeeMZYJcLDsI4WE44aTN8Dr1wWiBFiMdRyWqzGUL9I1L9DjDPOGT3pjsNQ
5gp4F3LF+HAn9ZNT+DA426Q+7EYxDrW9MV9RPQztslU3770Xo2Jt5eoKxTBG
l3C67Rwl0OJ5zKHFGgQx8hpztkmQyGVVmyVosDe6KzEtW4JTeVGf9HUazOba
DmXek+D1YOeaHcMa5E24853FoAR/3r54wdp1BJwju1ZdnyXFc/JixD1tBMYW
p00D/KUwebBvj+3jEczlzqjKzJRCMJgkCPpKi8H42nEP/5BCclYWZLRBiwhG
/sIchRTZ3EaZ6Qkt3BaTmTttZPD1IKlP27WoW5nyzN1HBs+NlVYjk3Xo9/fe
XJkiw6vHvMbsLTrUFczKt+fKUNI0PyqlWAeBJKvkklSGVJfxs5x7dWhav+rn
2qlyjJlskbnNGAWzU0daveSoY2lr60NHkRE+eU90khxGLlOP5l0exXRz7imb
q3IkRhdHfisahb9gZ/KrPjmmz0v2tZujx9qGwGUzJg4gyK/DM4mlR0/Drmv7
qAH8rUt1XVOrx+wu3pBP/ABeW5aB9U6PFhVHv6J8AMZlc/2Zi8YwCac6nV8P
gF0zhZ0fPwazc88ir41XIMJh7wnX+jHcsLJrdnVXoMjOieujGUNNlYrujlVA
nOMltln9BcEbHHs/lynQFcZ3ZB7+grpJQXlOLxR419DB6nv0BY2SflPhOBov
PYtD3hoRyqlLvbViOY1HwpGTDx0I5dI3bWcim0a7h7nHZgah/tXkuHSX0Ljo
F3zwZAShIiRK+5qzNEo9r0TZsQj15slus4xSGoXL/wmpNbj5oiu99DyNTKsU
5hM2oc4x6PLCMhps/vlpZtGEYhR6WftV0li8u/fuiVhCnZ9nPNpVR6Mhboc+
9xdCWUxJGKyqp8HbXf7R9ldCZWsF/LRbNG5ufSuvMXj/Ux7PhUfj8orkrvYk
QjEPsOLy79LIGi699E0KoT7cb5ZsaqKxMZ3vmZtOKPbVpd1zHtBg7J/9g+0R
QvUVcZr0BnuERTnXGNwacZBz4xENl3Uay/YMQnFMnbZPaqVhOWG6zOQooSyV
BQy5wRM1ofxSg48LdMsb22h8/ba6c342oRK4L81j22moO1byvI8RSnEOY4wO
GkN/pdfwDQ7Jqn1n/4QGfb2tLOo4oV7E2PQpDRaXmf+mMdhre1Z7ZyeN3vzA
Yzk5hPoPfBZtPQ==
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     3]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[CalculateUtilities`GraphicsUtilities`Private`pt, 1, 
                    2]]}, ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0.5, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[
                 NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[4, 3]}}, {{0.5, 0}, {0.5, 
                   1.3333333333333333`}}]], 
                LineBox[
                 NCache[{{
                    Rational[3, 4], 0}, {
                    Rational[3, 4], 2}}, {{0.75, 0}, {0.75, 2}}]]}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{0.475, 0.775}, {0, 2.066666650340136}}, 
              PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"5", " ", "n"}], "-", "1"}], 
                    RowBox[{"12", " ", "n"}]], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["5", "12"], "-", 
                    FractionBox["1", 
                    RowBox[{"12", " ", "n"}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "2"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 2, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["5", "12"], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "12"]}]}], "}"}], ",", "0", ",", "2", 
                    ",", "1"}], "]"}]}, "SeriesData", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$615493$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
615494$$ = 0, CalculateScan`RiemannSumScanner`Private`method$615495$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$615493$$\
, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    
                    CalculateScan`RiemannSumScanner`Private`intervals$615494$$\
, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$615495$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (
                    Rational[3, 4] - Rational[1, 2])/
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    Rational[8, 3] $CellContext`x, {$CellContext`x, 0.475, 
                    0.775}, 
                    PlotRange -> {{0.475, 0.775}, {-0.19999999999999996`, 
                    2.2}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    Rational[
                    1, 2] + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, $CellContext`x -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[5, 12], 0.4166666666666667]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[5, 12]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    Rational[8, 3] $CellContext`x, {$CellContext`x -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/\
APkPiMNCjwBQntBcakASUp33uLncbCtYPtbIM/Dz67SZq1qxTTAZrSD6f60jy+e+656z05klHa7/\
V6+qo1HyQn6Q08PbZmV85yWQjy7jRXVGsmRXoFn922JqZmj3L4QYn3XbfmvVQzMP78Bt8HnhQcDP1q\
GGeGUT3ZV5BnLNG1Z6TYsf3JhMsEOPtJn77aGr4cvvYoGMoIjKFK6BdtEfNMgaZpD4GuWbPDQXzzx0\
fl8VPBeUy/F1QkVD+\
w3rECYmGkAI7pBN96qYm6i3kZEAQUuXCWnDh32l6gjWJiOqazHN84l6uttrigptpTc6+kZp1+\
fPQ38YGMXUje43J2Z8dfWBiXi72zovrn1A3w/\
LYtvJInK3nD9LY50gaGHVO9zOaz1lXyhFQt64KfU3VBs2WjMZ4/Yep/\
pEOmzXIYz9uGQWdHtsKrlbcMP2wLL3Ns+bm071vz2TtKwFWToZLbR0kKPo+imfLAC7R9ujq3Do9xp+\
I7RmdIBSucyMZZdovrjocVeL0jxFi7yQakI+oJENGcWhdx3O6xKTO7GShILPD8un7ZY2NZhxJwZ/\
vaM0GYHV+ekHVrE5qDdKHuYJLsyx8Vt5LLmSZD3g+EoVOq1or+\
FtZHWXIFGcvASGK8oKnXYA6rpEaggmU/KEHiHARDSPbLftw3/3CxEkjVvkJ1Kc/\
iwJXmNDyJflngQyqmJmtu14GjK7htMZtIntSqi1iaLk6bzTHdbzLduKE50ENJCC1J+EDv9oRuT/\
iLe8LSDtwtCd2S0C0J3ZLQLQn/75LgIsZ/pd81Wrbu"]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {
    "title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(8 x)/3, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    FractionBox[
                    RowBox[{"2", " ", "x"}], 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "2"], ")"}], "2"]}]], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"]}], "3"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.064", 
     "parsetiming" -> "1.308", "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa2201he4a3b448g299dd00001ddc5429ah0e1a92&s=42", "id" -> 
     "MSPa2211he4a3b448g299dd00002ei3522d76679g7h", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "42", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa2221he4a3b448g299dd00004h5915i1de2a9hh6&s=42", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.497", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www3.wolframalpha.com", "server" -> "42", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 12, 49, 0.3743701`7.325876144601153}, "Line" -> 5, 
    "SessionID" -> 18268248686573105205}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate (2 x)/(1 - (1/2)^2) dx from  1/2 to 3/4"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {438., 444.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa2201he4a3b448g299dd00001ddc5429ah0e1a92&s=42", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702768540438339*^9},ExpressionUUID->"06daf38b-8292-4a50-a5bd-\
482a8662e62d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["g)", "Subsubsection",
 CellChangeTimes->{{3.702524630212552*^9, 
  3.7025246321962814`*^9}},ExpressionUUID->"29c9e041-d56d-4e7e-8496-\
bfc6d7945f05"],

Cell[CellGroupData[{

Cell["integrate 8 x y dx from y to 3/4", "WolframAlphaLong",
 CellChangeTimes->{{3.7028098258790884`*^9, 
  3.7028098564610558`*^9}},ExpressionUUID->"c420ffb1-4bfd-47e1-bf53-\
8a3db4814b51"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate 8 x y dx from y to 3/4", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[8 x y, {x, y, 3/4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "y", 
                  FractionBox["3", "4"]], 
                 RowBox[{
                   RowBox[{"8", " ", "x", " ", "y"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox[
                  RowBox[{"9", " ", "y"}], "4"], "-", 
                 RowBox[{"4", " ", 
                   SuperscriptBox["y", "3"]}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[8 x y, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    RowBox[{"8", " ", "x", " ", "y"}], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"4", " ", 
                    SuperscriptBox["x", "2"], " ", "y"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.678", 
     "parsetiming" -> "0.755", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1301i41dg90e32c6a11000020ed71chg761dh725376028518818137374", "id" -> 
     "MSPa1311i41dg90e32c6a1100004a0ibf3c93d96gd5", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "53", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa1321i41dg90e32c6a11000020h15b3a522951705376028518818137374", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.318", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "8", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 4, 0, 17, 40.7638808`9.362850403032894}, "Line" -> 20,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate 8 x y dx from y to 3/4"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {103., 109.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1301i41dg90e32c6a11000020ed71chg761dh725376028518818137374", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028098608107543`*^9},ExpressionUUID->"8f40d7ef-9002-4ed8-9c62-\
2dcd2720cabb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"integrate", " ", 
    FractionBox[
     RowBox[{"9", " ", "y"}], "4"]}], "-", 
   RowBox[{"4", " ", 
    SuperscriptBox["y", "3"], "dy", " ", "from", " ", "0", " ", "to", " ", 
    FractionBox["1", "2"]}]}], TraditionalForm]], "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028098608107543`*^9},ExpressionUUID->"0b9dc67b-9910-4015-b972-\
9a3bbbc12ac2"]], "WolframAlphaLong",
 CellChangeTimes->{{3.7028098854660053`*^9, 3.7028099058684993`*^9}, {
  3.7028100722772384`*^9, 
  3.7028100733242674`*^9}},ExpressionUUID->"0eae06a9-5cf0-4316-93fd-\
23de94aab9c9"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "integrate (9 y)/4 - 4 y^3 dy from 0 to 1/2", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(9 y)/4 - 4 y^3, {y, 0, 1/2}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", 
                  FractionBox["1", "2"]], 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"9", " ", "y"}], "4"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["7", "32"], Identity], "\[LongEqual]", 
              TagBox["0.21875`", Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(9 y)/4 - 4 y^3, {y, 0, 1/2}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1: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
BTRZHz/ZdHX4/+H/vpf+e5//AY1GVUk=
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt1GV0EAQYhtGNbXQ3SI0G6ZJukJBwdAqja0NCurtVWhpUGgXpFJRQujst
FJDuvDvjxz3P9/895wsNjwyLiBEQEBBISGB0n72/C2kM/V2fM4c93KcXU9nK
vzSgC+NZyzXK8QnhDGMZZylIWWrSmqEs5QwFKEMNWjGE7zlNfurTmXH8yFVK
U53PGMx3nCIf9ejEWH7gCqXozhQ28hfVaMkgvuUkeenJ12zhJmF0ZAxruExJ
IpnMBv7kY6aznVu0YCBLOEEevmE39+jBPh7zFZv5h085wFNm8pqd3KEDb/mV
h4zmBau5RImoXe33mwZrELPcb9jF/0QERI+/Vx4xiZes5w+qsp8nTOMV2/iP
5vzCAwawmON8yGx+5i6f8yWb+Ju6zGAHt2nPKFZxkeJ0YyI/cYMqNKM/izhG
burQjpGs5AIf0ZUJrOM6lWlKPxZylFzUpi0jWMF5ilGJJvRlAUfISS3aMJzl
nKMoFWlMH+ZzmBwUoQKN+IJ5HCI72chKFjITSiYykoH0pOMD0pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIiYhBBNE1A8oTHka0pu5HOQdmzOBUQ==
                    "]]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1: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
                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[{{0, 0}, {0, 0}}], 
                 LineBox[
                  NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[5, 8]}}, {{0.5, 0}, {0.5, 0.625}}]]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {263, 1}, 3, CompressedData["
1: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
                    "], CompressedData["
1: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
                    "], CompressedData["
1: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
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1: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
                    "] -> CompressedData["
1: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
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     3]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     3]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[
                 NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[5, 8]}}, {{0.5, 0}, {0.5, 0.625}}]]}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{-0.05, 0.55}, {-0.11199997281632645`, 
               0.6495190399987324}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7", " ", "n"}], "+", "2"}], ")"}]}], 
                    RowBox[{"32", " ", 
                    SuperscriptBox["n", "2"]}]], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["7", "32"], "-", 
                    FractionBox["5", 
                    RowBox[{"32", " ", "n"}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "2"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 2, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["7", "32"], ",", 
                    RowBox[{"-", 
                    FractionBox["5", "32"]}]}], "}"}], ",", "0", ",", "2", 
                    ",", "1"}], "]"}]}, "SeriesData", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$565278$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
565283$$ = 0, CalculateScan`RiemannSumScanner`Private`method$565284$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$565278$$\
, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    
                    CalculateScan`RiemannSumScanner`Private`intervals$565283$$\
, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$565284$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (
                    Rational[1, 2] - 0)/
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, {$CellContext`y, -0.04999999999999999,
                     0.55}, 
                    PlotRange -> {{-0.04999999999999999, 
                    0.55}, {-0.06495190528383282, 0.7144709581221618}}, 
                    Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[7, 32], 0.21875]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[7, 32]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    Rational[9, 4] $CellContext`y - 
                    4 $CellContext`y^3, {$CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/\
APkPiMxBgTH5AQ29iYNKAk5XtvsZNauHawnb3w58FnN0mzdpViOkBT+uFUX5rHd889d71nRzJK+\
71eT1+35qPkJL2Fp6fW7MhpLgtBPpzmimrNpEiv4bO71sTU7FIOZ5R4301r9qSagvHnt/g+\
8KTgYOg3wzgzjOrxvoJ8whJde4aKHdufjLlMgLOf9Pnrrc2NN1seBUMZgjFUCf2qLWI+\
UaBp2kOgG9ZscxDf/\
fFJefxccB7THwUVCdWPrHekgFgYKYBjOsG3Xmmi7mNeBgQBRS6dJSfO7bYXaKOYyEZ0muMbF3L1si0\
uqEx7ah6U1KzSj4/+Nj6QsQvJe1zO7uz4CwvjarF3XlT/nLoBnt+\
1hVfyZClvmN57jrSBYcdUL7L5onWVPCFVy7rgZ1Rd0mxZa4wXT5j6H+\
mQabMYxkbbMOj0yFZ4ufIW4TfbwsscW34m7YfWfPGOEnDZZKjk9kmSgs+\
iaKY88AJtn67OrcNj3Kv4jtEZUsEKJ7Jxlt3iuuNxBV7vCDHWbrwG6Yh6AkQ0p9ZFHLe7LGNmZwIKE\
gs8u65f9thI1qEE3Nm+\
9kwQZseXJ2TV2oTmIJ2rO5hk8vWPilvJ5VyTIe8HwtCMqpWiv4P1UZZcQUYyMJIYL2jqNZjDKqkhqG\
DZD0qQOAfBEJL9sh/3zT+crwRSta9QXcqzOHClOQ1Pol8W+\
JCKzEya23Xg6ApuW8wmkie16iKWpvPTZn1M95tMN25oDvRQEkJLEj7Quz2h2xP+\
4p6wsAN3S0K3JHRLQrckdEvC/7skuIjxX+k3HHy3Dg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(9 y)/4 - 4 y^3, y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"9", " ", "y"}], "4"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], HoldForm], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"9", " ", 
                    SuperscriptBox["y", "2"]}], "8"], "-", 
                    SuperscriptBox["y", "4"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.289", 
     "parsetiming" -> "1.477", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa35891begb2g9a88hci0400006042ii65c5f52ih97552245704543500187", "id" -> 
     "MSPa35901begb2g9a88hci040000538f9ia48b11bf6h", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "10", "related" -> 
     "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa35911begb2g9a88hci0400003hh3a313467864ea7552245704543500187", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.5710000000000001", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4f.wolframalpha.com", "server" -> "64", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 4, 0, 21, 17.5643453`8.99720690916614}, "Line" -> 22, 
    "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate (9 y)/4 - 4 y^3 dy from 0 to 1/2"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {423., 429.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4f.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa35891begb2g9a88hci0400006042ii65c5f52ih97552245704543500187", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028100776424975`*^9},ExpressionUUID->"def523db-151a-4a84-a386-\
1697b733529d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "y"}], "-", 
    RowBox[{"4", 
     SuperscriptBox["y", "3"], " ", "dy", " ", "from", " ", "0", " ", "to", 
     " ", 
     FractionBox[
      RowBox[{"1", " "}], "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "825c8ec3-8ff4-4a93-aeca-77725d3afb17"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702810097982621*^9, 
  3.702810187614684*^9}},ExpressionUUID->"131120c4-d814-4e8f-8779-\
463fb8b41402"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate 4 y - 4 y^3 dy from 0 to 1 /2", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4 y - 4 y^3, {y, 0, 1/2}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", 
                  FractionBox["1", "2"]], 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "y"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["7", "16"], Identity], "\[LongEqual]", 
              TagBox["0.4375`", Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[4 y - 4 y^3, {y, 0, 1/2}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1:eJw1VAs01HkU9iqiiFrtJLVTtCtFJ6Ws6lMqz7alsXqIyUqlh0irrJI1olRo
ncozyUpmQ4xqpSUmj8n70aAxvzKzwnjGzH8VZmf3bPece75zz7nnft+537mX
7u3vekhFSUlplyL/RcdDvU1lfds3O/yHhzaHaxR+fZnGwtCsiB2atEzs2Xs3
b2Q0AfdHTA4XDHOgJQ/3sFt8B8feNqgP6JfC2GWotyImEyHGe1KcIrgIrrfC
7fEHEAbXvWKJarCAoytUVs6Du9Hfdu9F9XjcbVvbsLEAqT48vqFxM8r9Ug32
DnAQR8yc46tbIV2+SefhiSewWEY/GmDNh8oEe66BcTHo1p/OOZEOWMqZj3fn
luBnzdLGFa4C1LLW1leuKMXlSq/gCI4QS+IkEw+GytB5iyZuyHgLCUWEbavL
ETaxx6m6+R0y+5/xtK9XYCp+u9oGmgjahveHxWIupqr1Azx/EOPq0SLfdKNK
LJltNmMy5C/IbNjiI2FVYLBG2fmcHgSt4XL0K6oR7x7s0Nn2HiSXG9NE50Gm
ERM8qdmHT36tySYhr+DhKxGqWfbDdIv6tO+zWtzV7mDw7CWwy6AffrSgHh/c
irk9JwYQbOi19J1HA8QxHrMFIYNYOeCmxd/ZiH2Ln14eOj+EeTojGtyPjTCl
KWelxQ9DrTQ5b1lKExa9bCto2TGCY2ufdcxyagaWOaefqh0B28E7/U9ZMwp2
MnvDnEchlSyc23OzBSGDNlKdF6Mo2m2nmrCtFXEng06v3/gBYfaRdzg9rdhn
PsaY+fsH0Lsc2+9FtsHq9PaIBP0xfLuelUBb8xovY7MDcy+NwWNxw4Ryy2vM
PGCTIZSMQcq71n0qnI8zUazM527juK3mGeRq1A7VxLKTvZxxzBMWZahw29GY
u3cqS1uKGefDGVYBHQjsS6zqPSaF0gPPvG69ToTy2MtVSqUITMq7plfeiV/3
C7Lvz5fhuWm0hu7JN+hv8Dxr6iODrmPgyl+0BZhZrmdgkiODYFVjy7kSAfLs
VSaZozLkp8FI7NmFOUcvSJjmFA7kWeoaTnfB9wWN8eYwhYuRd8MFOUIk8g/6
r0un8LDXMFnbmSC76uz3eo0Ubi3RksrlBKKqrVNyOYX0L3ZdukILwtykyTo/
WgKWsubbq2cRzHeM4XF7KXSZR9leo/lAdbe/W6Tibo5YJo5qniO4UVFqkSSg
IGiKTVNtIfDXuRgbP07B3Yd6foPGgHG9f3mcYu6V2P2VV70JrsvdRAdfU5Cv
cD0dWUKQYXVz+PEQheKzdTXhfQQq3qmJjI8UnOr4Bam0bbD5UmqRquBdVFKS
v9Od4KKBqfKmFgpx7oUHdjwiCDXLqS2TKPp/M+NsFRI8kbtq/ERR+Mb5OCkb
J/iqxmHLqikKFndupxTS1mL1FRJaqNDl4zponOtCUBwd7p3dRKFjUNScxSZI
K/OKsu2nkGDtZXKvXcG39Y9oNRmFgO4UBn2YoIZdnfPiE4W3RdZ+zI8EzNlC
j1vTFNRsF54iNCOIakyPEIXu6NRIpvA7Bb9IHNWl2Pf0htA5/GyChORud1Yf
haeXqB9b2gjajztbO0kp3Fy1LtZlgCCJznLRUsxXU27NjKMIuvLPXOhW6C/x
u2e+eopgPDJE4KTw6/M/U/o/Pvv5uf4HUOaLLQ==
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 
                    63, 68, 74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 
                    49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
                    35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
                    21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
                    71}}]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1:eJwV0Hs01PkbB/BxyXYjtUS7bUSX3dSgjDUl7y25LNsva2mVEGFthWK2XUpS
8jMMlXIZcllUZhk/24qi9c1m+hmH5FaDdvp+SRFCmPlUaGf/eM5zXue83+c8
51kdEO4epM5isQJV8++WNx62EApFlLjJv9+aL6UMoqNSouNE1I5dnwc6HpdS
bmaJr7x/FFHCsNkUz31Sqj7lWvEqroi6WLlSHvGFlCp2pw2LZSVU5KpNUSJp
I3X4qafa/wxKqGKLhD6thY2UYuyr9ob061TRufz6+KQHlLaBAW/8UhF1J7lA
nJd0n8r0t9v0TDebqun5drdgcQ1l2Hql1qM6mSp1MF8yv6qUqgjVFlnb+lLL
EgRD5ranqXCHvvQb5glIKEqenGFfR8fXSr08TiZ2bLQqv7i5Gi9HCt0EZoX4
s8Moo2LtX7BhiUsKc0vQVaDTsPRCI3ZveJvUXlCOojlJ6v34h/ixwcppNO0m
2vydjg1EtUP7g7bOXO4ttPst+C7xRBe882U+tcLbCNW7f/qynwzMPk5d4ONa
aDNVUuOzvZAa/dGf3VuHfuUQ0xEix3QsI5Dr1sOqacqEc59Gr0nAiEPZX4h3
S4hJcuxDhGtk+aRZA8bDOTGVpf1YG9fyi0GzBM891ro7bhgA3/b2tTi3/+OZ
zqHhmKQXWDBvpMd/uhEfz34UwlMfhO+ZLI+stCZo33RceDR0CIFxXRb6es14
Hc3Vs6x5hYQL3vrzq1owtWTmt60rR7DPNOLADttWzNJDAcsPjoJ1i8UL8XmE
FWOcivcZr8HIR7YPb2yDoejAu1h6DDmuq7mXXrdB15O30yJhHP120TYR99ph
bZmh47VmAunJS/afTu2A5lgjS7N2AsafjpaJ/9OJ8aj66w72b8C1HNMwNOrC
Tu/JRez2N9iQxBVcY7rA5ax27XafRILtPWvfgseoE18+GdA8iWM/HRn4NvwJ
FMf+6/zaZQqbJ3wlIRYyyFJ7dnXUTuHs5AlRjVo3vJI/ED+LaZTaPKkzl3Sj
baNGuSBzGnZPIhWt8T24+XH8023KafjNWG0u9eiFSXHB79VeCuwLtMsXLX8K
ua9QnCNWgHE/qts/+BTPx6N9GtSV6Mh+XORU/TfyTm7ba79Hiby1/JDWn+UI
c0oONLyohNL6oGWa8zP4rlrSo9+qxBUJpX93Ho32P2yme9QJxk6RL7d+RGNw
ZxYnS4PAxcpy/+35NLRyOhZ6ahKoFRXmVS6i0Xz3VmTLPIKwM+fXi5fSuHhI
1+7OfALnba7cvM9oJK4LLDulQ/C+4vGBMxwaZQ/KRDdXEARcHS3aFaTKX55R
ytgETVfZtv3BNAI+1elLNCfYnBveGRdC4/2wrquNBYFG3oQmdUTVD6sWplsS
FOdPB3EjaEyZmX7uYkXwsnB2PTuWxkP9PXPZXIKjIu0yAyGNFlOJda89wc9V
mypfNdPIWpaq07GXINipLS30oSr/9dZ7Xt8TeMh4x8dbadwNq5/7W2WLd7Vs
RTuNSwZfmrz0Ihjc7iJS66bROZurNrWfwEsSnGc4QGN/n8sK4ktg05mf6DhL
w8TmxiFRMMG6IPsfpHM0vKt/vWr8A4Ge4oXDNywGre1m/pkqjxuwNdw1GNjy
JIJzIQQl3ndjfBYwkEWNHN17mMCwXxbB02dQ4/nO6UUowduJpT6FmxgMnsox
LucRPG8Y4rqbM5AfrO82+YngYWb9cnVLBhkD5qxMlQu3H3/kb8XAiCO+EnOC
4Bv+I/vV2xj43kjvsf+FIM/4woYCZwa3ys+1VJ4k2LVnMck9xEDjnfrw+rME
bJPnnbuDGPDcPC2TVDacrv19NpjBV8Gm/cMqj2YfOeJzmMGdLW8TxecIMl40
yVceZ6DQJb1fnCcYiuFLck4zePBbSZpWIkGnm3+h6xkG6SIF30/lOlNu7Ps4
BguV3cPVKqdJB228zzO4zawbC+YT2Oo7l30iYPCmwvHNn0mqfw4a8ZtSGFQ9
K7VdlkygW6sMir7AoHHNlokglQcO3jDqSWNQ4BmWtUhA8GhL7Az/CgP3yHnJ
PirXaH3fzc1gsGbR+ZflKhd3s6uGMhksqJKLP6icWqZ1WShU3b9YU74nheAf
nMc+5g==
                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[{{0, 0}, {0, 0}}], 
                 LineBox[
                  NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[3, 2]}}, {{0.5, 0}, {0.5, 1.5}}]]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {100, 1}, 3, CompressedData["
1:eJwBMQPO/CFib1JlAgAAAAEAAABkAAAA3shqMJmZqb8XenmNeoGpv1AriOpb
aam/wY2lpB45qb+kUuAYpNiov2rcVQGvF6i/9u9A0sSVpr8NFxd08JGjv5dh
Pi3fEJq/GM+Uu1S3i7+wbQ2pNjxev29F4pWnL4Y/00n3FJ41lz/n7KJQjCui
PzgAraiinag/TSr5itKgrj9pxDRH7ZKyPw3/DQ7+nbU/W5/YXbuZuD/hWTW+
ZNa7P8kfs+Oa274/9X/hjN4QwT/bImLsRazCP3JLc67zK8Q/JYHNeBfMxT+J
PLilgVDHPwkF7Nph9cg/XoCYVJiSyj9kgdUwFRTMP4aPWxUIts0/WSNyXEE8
zz8AtQB0aF3QP+He7D3rLNE/m0shOZHu0T/jPno4csDSP5WLD1p+jtM/IBvt
rK1O1D85Me8DGB/VPyqKOYyl4dU/hjzANl6g1j9wdWvlUW/XPzLxXsVoMNg/
gvN2qboB2T+rONe+L8XZPz7Xc/bPhNo/X/w0MqtU2z9ZZD6fqRbcP+FSbBDj
6Nw/05rWo0e33T+eJYloz3feP/c2YDGSSN8/lMW/FbwF4D/vfPg3OgfgP0o0
MVq4COA/AaOinrQL4D9ugIUnrRHgP0g7SzmeHeA/+7DWXIA14D9inO2jRGXg
P8qcLjzjZuA/Mp1v1IFo4D8DnvEEv2vgP6Sf9WU5cuA/56L9Jy5/4D9sqQ2s
F5ngP3e2LbTqzOA/ZkfRkm3O4D9U2HRx8M/gPzD6uy720uA/6D1KqQHZ4D9Y
xWaeGOXgPzjUn4hG/eA/JmVDZ8n+4D8U9uZFTADhP/AXLgNSA+E/qFu8fV0J
4T8Y49hydBXhP/nxEV2iLeE/5MTpOVIv4T/Ol8EWAjHhP6I9cdBhNOE/TInQ
QyE74T+eII8qoEjhP0RPDPidY+E/LiLk1E1l4T8Y9bux/WbhP+2aa2tdauE/
lubK3hxx4T/pfYnFm37hP9RQYaJLgOE/viM5f/uB4T+Syeg4W4XhPzwVSKwa
jOE/JugficqN4T8Qu/dleo/hP+Vgpx/akuE/0DN//ImU4T+6BlfZOZbhP6TZ
Lrbpl+E/jqwGk5mZ4T/mYppX
                    "], CompressedData["
1:eJwBLQPS/CFib1JlAQAAAGQAAADeyGowmZmpvxd6eY16gam/UCuI6ltpqb/B
jaWkHjmpv6RS4Bik2Ki/atxVAa8XqL/270DSxJWmvw0XF3TwkaO/l2E+Ld8Q
mr8Yz5S7VLeLv7BtDak2PF6/b0Xilacvhj/TSfcUnjWXP+fsolCMK6I/OACt
qKKdqD9NKvmK0qCuP2nENEftkrI/Df8NDv6dtT9bn9hdu5m4P+FZNb5k1rs/
yR+z45rbvj/1f+GM3hDBP9siYuxFrMI/cktzrvMrxD8lgc14F8zFP4k8uKWB
UMc/CQXs2mH1yD9egJhUmJLKP2SB1TAVFMw/ho9bFQi2zT9ZI3JcQTzPPwC1
AHRoXdA/4d7sPess0T+bSyE5ke7RP+M+ejhywNI/lYsPWn6O0z8gG+2srU7U
Pzkx7wMYH9U/Koo5jKXh1T+GPMA2XqDWP3B1a+VRb9c/MvFexWgw2D+C83ap
ugHZP6s4174vxdk/Ptdz9s+E2j9f/DQyq1TbP1lkPp+pFtw/4VJsEOPo3D/T
mtajR7fdP54liWjPd94/9zZgMZJI3z+Uxb8VvAXgP+98+Dc6B+A/SjQxWrgI
4D8Bo6KetAvgP26AhSetEeA/SDtLOZ4d4D/7sNZcgDXgP2Kc7aNEZeA/ypwu
PONm4D8ynW/UgWjgPwOe8QS/a+A/pJ/1ZTly4D/nov0nLn/gP2ypDawXmeA/
d7YttOrM4D9mR9GSbc7gP1TYdHHwz+A/MPq7LvbS4D/oPUqpAdngP1jFZp4Y
5eA/ONSfiEb94D8mZUNnyf7gPxT25kVMAOE/8BcuA1ID4T+oW7x9XQnhPxjj
2HJ0FeE/+fERXaIt4T/kxOk5Ui/hP86XwRYCMeE/oj1x0GE04T9MidBDITvh
P54gjyqgSOE/RE8M+J1j4T8uIuTUTWXhPxj1u7H9ZuE/7Zpra11q4T+W5sre
HHHhP+l9icWbfuE/1FBhokuA4T++Izl/+4HhP5LJ6DhbheE/PBVIrBqM4T8m
6B+Jyo3hPxC792V6j+E/5WCnH9qS4T/QM3/8iZThP7oGV9k5luE/pNkutumX
4T+OrAaTmZnhP9limlU=
                    "], CompressedData["
1:eJwV0Hs01PkbB/BxyXYjtUS7bUSX3dSgjDUl7y25LNsva2mVEGFthWK2XUpS
8jMMlXIZcllUZhk/24qi9c1m+hmH5FaDdvp+SRFCmPlUaGf/eM5zXue83+c8
51kdEO4epM5isQJV8++WNx62EApFlLjJv9+aL6UMoqNSouNE1I5dnwc6HpdS
bmaJr7x/FFHCsNkUz31Sqj7lWvEqroi6WLlSHvGFlCp2pw2LZSVU5KpNUSJp
I3X4qafa/wxKqGKLhD6thY2UYuyr9ob061TRufz6+KQHlLaBAW/8UhF1J7lA
nJd0n8r0t9v0TDebqun5drdgcQ1l2Hql1qM6mSp1MF8yv6qUqgjVFlnb+lLL
EgRD5ranqXCHvvQb5glIKEqenGFfR8fXSr08TiZ2bLQqv7i5Gi9HCt0EZoX4
s8Moo2LtX7BhiUsKc0vQVaDTsPRCI3ZveJvUXlCOojlJ6v34h/ixwcppNO0m
2vydjg1EtUP7g7bOXO4ttPst+C7xRBe882U+tcLbCNW7f/qynwzMPk5d4ONa
aDNVUuOzvZAa/dGf3VuHfuUQ0xEix3QsI5Dr1sOqacqEc59Gr0nAiEPZX4h3
S4hJcuxDhGtk+aRZA8bDOTGVpf1YG9fyi0GzBM891ro7bhgA3/b2tTi3/+OZ
zqHhmKQXWDBvpMd/uhEfz34UwlMfhO+ZLI+stCZo33RceDR0CIFxXRb6es14
Hc3Vs6x5hYQL3vrzq1owtWTmt60rR7DPNOLADttWzNJDAcsPjoJ1i8UL8XmE
FWOcivcZr8HIR7YPb2yDoejAu1h6DDmuq7mXXrdB15O30yJhHP120TYR99ph
bZmh47VmAunJS/afTu2A5lgjS7N2AsafjpaJ/9OJ8aj66w72b8C1HNMwNOrC
Tu/JRez2N9iQxBVcY7rA5ax27XafRILtPWvfgseoE18+GdA8iWM/HRn4NvwJ
FMf+6/zaZQqbJ3wlIRYyyFJ7dnXUTuHs5AlRjVo3vJI/ED+LaZTaPKkzl3Sj
baNGuSBzGnZPIhWt8T24+XH8023KafjNWG0u9eiFSXHB79VeCuwLtMsXLX8K
ua9QnCNWgHE/qts/+BTPx6N9GtSV6Mh+XORU/TfyTm7ba79Hiby1/JDWn+UI
c0oONLyohNL6oGWa8zP4rlrSo9+qxBUJpX93Ho32P2yme9QJxk6RL7d+RGNw
ZxYnS4PAxcpy/+35NLRyOhZ6ahKoFRXmVS6i0Xz3VmTLPIKwM+fXi5fSuHhI
1+7OfALnba7cvM9oJK4LLDulQ/C+4vGBMxwaZQ/KRDdXEARcHS3aFaTKX55R
ytgETVfZtv3BNAI+1elLNCfYnBveGRdC4/2wrquNBYFG3oQmdUTVD6sWplsS
FOdPB3EjaEyZmX7uYkXwsnB2PTuWxkP9PXPZXIKjIu0yAyGNFlOJda89wc9V
mypfNdPIWpaq07GXINipLS30oSr/9dZ7Xt8TeMh4x8dbadwNq5/7W2WLd7Vs
RTuNSwZfmrz0Ihjc7iJS66bROZurNrWfwEsSnGc4QGN/n8sK4ktg05mf6DhL
w8TmxiFRMMG6IPsfpHM0vKt/vWr8A4Ge4oXDNywGre1m/pkqjxuwNdw1GNjy
JIJzIQQl3ndjfBYwkEWNHN17mMCwXxbB02dQ4/nO6UUowduJpT6FmxgMnsox
LucRPG8Y4rqbM5AfrO82+YngYWb9cnVLBhkD5qxMlQu3H3/kb8XAiCO+EnOC
4Bv+I/vV2xj43kjvsf+FIM/4woYCZwa3ys+1VJ4k2LVnMck9xEDjnfrw+rME
bJPnnbuDGPDcPC2TVDacrv19NpjBV8Gm/cMqj2YfOeJzmMGdLW8TxecIMl40
yVceZ6DQJb1fnCcYiuFLck4zePBbSZpWIkGnm3+h6xkG6SIF30/lOlNu7Ps4
BguV3cPVKqdJB228zzO4zawbC+YT2Oo7l30iYPCmwvHNn0mqfw4a8ZtSGFQ9
K7VdlkygW6sMir7AoHHNlokglQcO3jDqSWNQ4BmWtUhA8GhL7Az/CgP3yHnJ
PirXaH3fzc1gsGbR+ZflKhd3s6uGMhksqJKLP6icWqZ1WShU3b9YU74nheAf
nMc+5g==
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1:eJwBLQPS/CFib1JlAQAAAGQAAADeyGowmZmpvxd6eY16gam/UCuI6ltpqb/B
jaWkHjmpv6RS4Bik2Ki/atxVAa8XqL/270DSxJWmvw0XF3TwkaO/l2E+Ld8Q
mr8Yz5S7VLeLv7BtDak2PF6/b0Xilacvhj/TSfcUnjWXP+fsolCMK6I/OACt
qKKdqD9NKvmK0qCuP2nENEftkrI/Df8NDv6dtT9bn9hdu5m4P+FZNb5k1rs/
yR+z45rbvj/1f+GM3hDBP9siYuxFrMI/cktzrvMrxD8lgc14F8zFP4k8uKWB
UMc/CQXs2mH1yD9egJhUmJLKP2SB1TAVFMw/ho9bFQi2zT9ZI3JcQTzPPwC1
AHRoXdA/4d7sPess0T+bSyE5ke7RP+M+ejhywNI/lYsPWn6O0z8gG+2srU7U
Pzkx7wMYH9U/Koo5jKXh1T+GPMA2XqDWP3B1a+VRb9c/MvFexWgw2D+C83ap
ugHZP6s4174vxdk/Ptdz9s+E2j9f/DQyq1TbP1lkPp+pFtw/4VJsEOPo3D/T
mtajR7fdP54liWjPd94/9zZgMZJI3z+Uxb8VvAXgP+98+Dc6B+A/SjQxWrgI
4D8Bo6KetAvgP26AhSetEeA/SDtLOZ4d4D/7sNZcgDXgP2Kc7aNEZeA/ypwu
PONm4D8ynW/UgWjgPwOe8QS/a+A/pJ/1ZTly4D/nov0nLn/gP2ypDawXmeA/
d7YttOrM4D9mR9GSbc7gP1TYdHHwz+A/MPq7LvbS4D/oPUqpAdngP1jFZp4Y
5eA/ONSfiEb94D8mZUNnyf7gPxT25kVMAOE/8BcuA1ID4T+oW7x9XQnhPxjj
2HJ0FeE/+fERXaIt4T/kxOk5Ui/hP86XwRYCMeE/oj1x0GE04T9MidBDITvh
P54gjyqgSOE/RE8M+J1j4T8uIuTUTWXhPxj1u7H9ZuE/7Zpra11q4T+W5sre
HHHhP+l9icWbfuE/1FBhokuA4T++Izl/+4HhP5LJ6DhbheE/PBVIrBqM4T8m
6B+Jyo3hPxC792V6j+E/5WCnH9qS4T/QM3/8iZThP7oGV9k5luE/pNkutumX
4T+OrAaTmZnhP9limlU=
                    "] -> CompressedData["
1:eJwV0Hs01PkbB/BxyXYjtUS7bUSX3dSgjDUl7y25LNsva2mVEGFthWK2XUpS
8jMMlXIZcllUZhk/24qi9c1m+hmH5FaDdvp+SRFCmPlUaGf/eM5zXue83+c8
51kdEO4epM5isQJV8++WNx62EApFlLjJv9+aL6UMoqNSouNE1I5dnwc6HpdS
bmaJr7x/FFHCsNkUz31Sqj7lWvEqroi6WLlSHvGFlCp2pw2LZSVU5KpNUSJp
I3X4qafa/wxKqGKLhD6thY2UYuyr9ob061TRufz6+KQHlLaBAW/8UhF1J7lA
nJd0n8r0t9v0TDebqun5drdgcQ1l2Hql1qM6mSp1MF8yv6qUqgjVFlnb+lLL
EgRD5ranqXCHvvQb5glIKEqenGFfR8fXSr08TiZ2bLQqv7i5Gi9HCt0EZoX4
s8Moo2LtX7BhiUsKc0vQVaDTsPRCI3ZveJvUXlCOojlJ6v34h/ixwcppNO0m
2vydjg1EtUP7g7bOXO4ttPst+C7xRBe882U+tcLbCNW7f/qynwzMPk5d4ONa
aDNVUuOzvZAa/dGf3VuHfuUQ0xEix3QsI5Dr1sOqacqEc59Gr0nAiEPZX4h3
S4hJcuxDhGtk+aRZA8bDOTGVpf1YG9fyi0GzBM891ro7bhgA3/b2tTi3/+OZ
zqHhmKQXWDBvpMd/uhEfz34UwlMfhO+ZLI+stCZo33RceDR0CIFxXRb6es14
Hc3Vs6x5hYQL3vrzq1owtWTmt60rR7DPNOLADttWzNJDAcsPjoJ1i8UL8XmE
FWOcivcZr8HIR7YPb2yDoejAu1h6DDmuq7mXXrdB15O30yJhHP120TYR99ph
bZmh47VmAunJS/afTu2A5lgjS7N2AsafjpaJ/9OJ8aj66w72b8C1HNMwNOrC
Tu/JRez2N9iQxBVcY7rA5ax27XafRILtPWvfgseoE18+GdA8iWM/HRn4NvwJ
FMf+6/zaZQqbJ3wlIRYyyFJ7dnXUTuHs5AlRjVo3vJI/ED+LaZTaPKkzl3Sj
baNGuSBzGnZPIhWt8T24+XH8023KafjNWG0u9eiFSXHB79VeCuwLtMsXLX8K
ua9QnCNWgHE/qts/+BTPx6N9GtSV6Mh+XORU/TfyTm7ba79Hiby1/JDWn+UI
c0oONLyohNL6oGWa8zP4rlrSo9+qxBUJpX93Ho32P2yme9QJxk6RL7d+RGNw
ZxYnS4PAxcpy/+35NLRyOhZ6ahKoFRXmVS6i0Xz3VmTLPIKwM+fXi5fSuHhI
1+7OfALnba7cvM9oJK4LLDulQ/C+4vGBMxwaZQ/KRDdXEARcHS3aFaTKX55R
ytgETVfZtv3BNAI+1elLNCfYnBveGRdC4/2wrquNBYFG3oQmdUTVD6sWplsS
FOdPB3EjaEyZmX7uYkXwsnB2PTuWxkP9PXPZXIKjIu0yAyGNFlOJda89wc9V
mypfNdPIWpaq07GXINipLS30oSr/9dZ7Xt8TeMh4x8dbadwNq5/7W2WLd7Vs
RTuNSwZfmrz0Ihjc7iJS66bROZurNrWfwEsSnGc4QGN/n8sK4ktg05mf6DhL
w8TmxiFRMMG6IPsfpHM0vKt/vWr8A4Ge4oXDNywGre1m/pkqjxuwNdw1GNjy
JIJzIQQl3ndjfBYwkEWNHN17mMCwXxbB02dQ4/nO6UUowduJpT6FmxgMnsox
LucRPG8Y4rqbM5AfrO82+YngYWb9cnVLBhkD5qxMlQu3H3/kb8XAiCO+EnOC
4Bv+I/vV2xj43kjvsf+FIM/4woYCZwa3ys+1VJ4k2LVnMck9xEDjnfrw+rME
bJPnnbuDGPDcPC2TVDacrv19NpjBV8Gm/cMqj2YfOeJzmMGdLW8TxecIMl40
yVceZ6DQJb1fnCcYiuFLck4zePBbSZpWIkGnm3+h6xkG6SIF30/lOlNu7Ps4
BguV3cPVKqdJB228zzO4zawbC+YT2Oo7l30iYPCmwvHNn0mqfw4a8ZtSGFQ9
K7VdlkygW6sMir7AoHHNlokglQcO3jDqSWNQ4BmWtUhA8GhL7Az/CgP3yHnJ
PirXaH3fzc1gsGbR+ZflKhd3s6uGMhksqJKLP6icWqZ1WShU3b9YU74nheAf
nMc+5g==
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     3]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[
                 NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], 
                    Rational[3, 2]}}, {{0.5, 0}, {0.5, 1.5}}]]}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{-0.05, 0.55}, {-0.19949995138775503`, 
               1.5344999954693868`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "-", "1"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7", " ", "n"}], "+", "1"}], ")"}]}], 
                    RowBox[{"16", " ", 
                    SuperscriptBox["n", "2"]}]], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    FractionBox["7", "16"], "-", 
                    FractionBox["3", 
                    RowBox[{"8", " ", "n"}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], "2"], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 2, 1], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["7", "16"], ",", 
                    RowBox[{"-", 
                    FractionBox["3", "8"]}]}], "}"}], ",", "0", ",", "2", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2371299$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
2371304$$ = 0, CalculateScan`RiemannSumScanner`Private`method$2371305$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2371299$\
$, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$2371304$\
$, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$2371305$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (
                    Rational[1, 2] - 0)/
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    4 $CellContext`y - 
                    4 $CellContext`y^3, {$CellContext`y, -0.04999999999999999,
                     0.55}, 
                    PlotRange -> {{-0.04999999999999999, 
                    0.55}, {-0.1499999999999999, 1.65}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    4 $CellContext`y - 4 $CellContext`y^3, $CellContext`y -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[7, 16], 0.4375]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[7, 16]]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    4 $CellContext`y - 
                    4 $CellContext`y^3, {$CellContext`y -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbikw3t/+\
ARKf0ViR9gkJ1rExaUBJyvfeEiexcO1gO9vgz4PPbpJm7SrFdICm9MOpvjSP75577nrPT0SQ9Hu9nr\
ppzAfB4mQLT8+MGYlZLgoevz/PJVGKCp7cwGf3jAmJ3icMfpDY+W4bcyDkDLQ7v8H3gUUFA02+\
asqopkRNDyXkGY1U7RlLemp+MmUiAkZ/khc7w93t4faug8FYxqA1kVwN20LmmQRFkh4C3TJmjwH/\
5o5Py+OngrGQfC8Ij4h6bLwTCbGBERwY5uN96/\
Vm6gEmpoHHIOMrp8nKc9T2AqUl5emEzHJ843KyXrUFBpkqx83Dkpt1CnLh38EHIrQxOY9N2p4tgX5h\
XDP6Lsrqn3M3wPPbtvBSnK0mDvN7x5A30PSUqGU6X7auk2Ok6lob/Zyrq5ovGw3y8ilT/\
y8dU6WXw9hpGwaZnZgar9beMvzrtvAix66fi/uRMZ+\
dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5XfIfo9KlghROYOMt+\
sf3xpAKvN4UQazfdgHR4PQMCkhPjii23+zSlepSBhMgAz6/\
rl002EXUoHne2rz3lMTUDzBGybnlCc5Qs1B10lH35o+\
JWcrnQZMj7EdckJXKt6O9ifaQhl8cT4RlJiBc09erNYZXUGKS37AclSJgDpwhJf5mP/\
eYeLlYCqTqUqC7pWBzY0pz7J9EvC3xMeKqz5o7tObq82xazCcRZrbqAJsnitNkc0/\
0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DYM5uE4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4 y - 4 y^3, y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"4", " ", "y"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], HoldForm], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["y", "4"], "4"], "-", 
                    FractionBox[
                    SuperscriptBox["y", "2"], "2"]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.137", 
     "parsetiming" -> "1.304", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1281520c65i4ach8421ce0000360687e82ba6515b5377805272989019356", "id" -> 
     "MSPa1281620c65i4ach8421ce000057ad5hai6h7cdda7", "host" -> 
     "http://www4b.wolframalpha.com", "server" -> "42", "related" -> 
     "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa1281720c65i4ach8421ce0000212h3g5ca98a05i35377805272989019356", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.545", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4b.wolframalpha.com", "server" -> "38", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 4, 0, 23, 11.5939001`8.816804513066153}, "Line" -> 24,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate 4 y - 4 y^3 dy from 0 to 1 /2"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {424., 430.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa1281520c65i4ach8421ce0000360687e82ba6515b5377805272989019356", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702810191659899*^9},ExpressionUUID->"4f90de8f-abfd-4e82-956c-\
fdae02b06cd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"integrate", " ", 
    RowBox[{"(", 
     RowBox[{
     "integrate", " ", "8", " ", "x", " ", "y", " ", "dx", " ", "from", " ", 
      "y", " ", "to", "  ", 
      RowBox[{"3", "/", "4"}]}], ")"}], " ", "dy", " ", "from", " ", "0", " ",
     "to", " ", 
    RowBox[{"1", "/", "2"}]}], 
   RowBox[{
    RowBox[{"integrate", " ", "4", "y"}], "-", 
    RowBox[{"4", 
     SuperscriptBox["y", "3"], "from", " ", "0", " ", "to", " ", 
     FractionBox["1", "2"]}]}]], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"8db321ad-dfc2-4809-999e-bc06a728bf3f"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.70281026619071*^9, 3.702810352818706*^9}, {
  3.7028103903068757`*^9, 3.7028103908224707`*^9}, {3.70281043113303*^9, 
  3.7028104870222273`*^9}},ExpressionUUID->"a4ddc4c6-7c13-47d5-b41b-\
6b3b89efa535"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "(integrate (integrate 8 x y dx from y to  3/4) dy from 0 to 1/2)/(\n\
integrate 4 y - 4 y^3 from 0 to 1/2)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[8 x y, {y, 0, 1/2}, {x, y, 3/4}]/Integrate[4 y - 4 y^3, \
{y, 0, 1/2}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox[
              RowBox[{
                SubsuperscriptBox["\[Integral]", "0", 
                 FractionBox["1", "2"]], 
                RowBox[{
                  SubsuperscriptBox["\[Integral]", "y", 
                   FractionBox["3", "4"]], 
                  RowBox[{
                    RowBox[{"8", " ", "x", " ", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}], 
              RowBox[{
                SubsuperscriptBox["\[Integral]", "0", 
                 FractionBox["1", "2"]], 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "y"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], ")"}], 
                  RowBox[{"\[DifferentialD]", "y"}]}]}]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FractionBox["1", "2"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Computation result", "scanner" -> "Integral", "id" -> 
     "ComputationResult", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               FractionBox[
                RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", 
                   FractionBox["1", "2"]], 
                  RowBox[{
                    SubsuperscriptBox["\[Integral]", "y", 
                    FractionBox["3", "4"]], 
                    RowBox[{
                    RowBox[{"8", " ", "x", " ", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}], 
                RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", 
                   FractionBox["1", "2"]], 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "y"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["y", "3"]}]}], ")"}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["1", "2"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.735", 
     "parsetiming" -> "2.717", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa77121fg673b0i8b9hc400001f815h9373gaga58150098073340013519", "id" -> 
     "MSPa77221fg673b0i8b9hc400001183afda9927e6be", "host" -> 
     "http://www4b.wolframalpha.com", "server" -> "21", "related" -> 
     "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa77321fg673b0i8b9hc400001efce2ad12ci4h5e150098073340013519", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.67", "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> 
     "", "id" -> "", "host" -> "http://www4b.wolframalpha.com", "server" -> 
     "18", "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 4, 0, 28, 12.4669074`8.848333690125562}, "Line" -> 28,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "(integrate (integrate 8 x y dx from y to  3/4) dy from 0 to 1/2)/(\n\
integrate 4 y - 4 y^3 from 0 to 1/2)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {170., 176.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa77121fg673b0i8b9hc400001f815h9373gaga58150098073340013519", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028104926075335`*^9},ExpressionUUID->"0d01309e-648a-4945-9a93-\
867c96525cbb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 3", "Subsection",
 CellChangeTimes->{{3.7028022370207796`*^9, 
  3.702802239605961*^9}},ExpressionUUID->"27be2ccd-25e5-4f57-82a4-\
256311d56b7a"],

Cell[CellGroupData[{

Cell["c)", "Subsubsection",
 CellChangeTimes->{{3.702802314856594*^9, 
  3.7028023158098707`*^9}},ExpressionUUID->"ecd0138e-47b1-4a9a-9f3d-\
49f3457268ef"],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate (integrate 4/3 dy from ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0b0ca398-71f8-426d-a575-fd239be53ddf"],
 "to1) dx from 1/2 to 1"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.7028022492245646`*^9, 3.7028022918443685`*^9}, {
  3.7028023282657676`*^9, 
  3.7028023631781597`*^9}},ExpressionUUID->"f86505f0-eba4-47e2-9be8-\
fd9737d34619"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "integrate (integrate 4/3 dy from x^3to1) dx from 1/2 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"N[Integrate[4/3, {x, 1/2, 1}, {y, x^3, 1}]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  FractionBox["1", "2"], "1"], 
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    SuperscriptBox["x", "3"], "1"], 
                   RowBox[{
                    FractionBox["4", "3"], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["17", "48"], Identity], "\[TildeTilde]", 
              TagBox["0.3541666666666667`", Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}]}]}], 
   Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, 
   Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "1.8940000000000001", "parsetiming" -> "1.36", "parsetimedout" -> 
     "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa68861bbge79231a7f9180000543hafh219cd67177282269933792486837", "id" -> 
     "MSPa68871bbge79231a7f91800003c1i1bb71fbbgef1", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "20", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa68881bbge79231a7f91800001a5304185eh4c0c27282269933792486837", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.435", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "51", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 22, 12, 47.622753`9.430389358673937}, "Line" -> 15,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate (integrate 4/3 dy from x^3to1) dx from 1/2 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{676., {61., 67.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa68861bbge79231a7f9180000543hafh219cd67177282269933792486837", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028023676695733`*^9},ExpressionUUID->"4fb8a587-371b-45bd-bb2c-\
8e92166af414"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate 4/3 dx from ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "160ea359-754b-41d7-9699-33d1e29fa644"],
 " to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", 
    FractionBox["1", "3"]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "241103b8-ebfb-408d-84a4-98b45fc2d513"]
}], "WolframAlphaLong",
 CellChangeTimes->{
  3.7028045052194786`*^9},ExpressionUUID->"a67f49cc-5cc4-4541-9f1d-\
f328e031ddd4"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate 4/3 dx from 1/2 to y^(1/3)", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4/3, {x, 1/2, y^(1/3)}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  FractionBox["1", "2"], 
                  RadicalBox["y", "3"]], 
                 RowBox[{
                   FractionBox["4", "3"], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["2", "3"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", 
                    RadicalBox["y", "3"]}], "-", "1"}], ")"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[4/3, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    FractionBox["4", "3"], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   FractionBox[
                    RowBox[{"4", " ", "x"}], "3"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.401", 
     "parsetiming" -> "0.887", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa7147219f069gdiga615b0000316732dd18565efc4820108256650706534", "id" -> 
     "MSPa7148219f069gdiga615b000012427229c2d509if", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "54", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa7149219f069gdiga615b00002f92b2ii121848184820108256650706534", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.307", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "23", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 22, 48, 33.6026133`9.278947953256669}, "Line" -> 
    17, "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate 4/3 dx from 1/2 to y^(1/3)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {107., 113.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa7147219f069gdiga615b0000316732dd18565efc4820108256650706534", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702804513733697*^9},ExpressionUUID->"e5fbc8e7-8363-41a6-b02b-\
7aa43bfe1986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["4", "3"], " ", 
       RadicalBox["y", "3"]}], "-", 
      FractionBox["2", "3"]}], ")"}]}], TraditionalForm]], "WolframAlphaShort",
  CellChangeTimes->{3.702804513733697*^9},ExpressionUUID->
  "9bdd995e-74f2-499a-bbdf-b18adf7ca1a0"],
 " from 1/2 to 1"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.702804636721553*^9, 3.7028046481570563`*^9}, {
  3.7028048745885615`*^9, 
  3.7028048963335457`*^9}},ExpressionUUID->"501fe17c-f1cf-4731-aff7-\
7f22a358f816"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "integrate  (4/3 Power[y, (3)^-1] - 2/3) from 1/2 to 1", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}, 
    PodStates -> {"IndefiniteIntegral__Step-by-step solution"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[-2/3 + (4 y^(1/3))/3, {y, 1/2, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  FractionBox["1", "2"], "1"], 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["y", "3"]}], "3"], "-", 
                    FractionBox["2", "3"]}], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "12"], " ", 
                 RowBox[{"(", 
                   RowBox[{"8", "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]]}]}], ")"}]}], Identity], 
              "\[TildeTilde]", 
              TagBox[
              "0.26981640367461679797874025684858960157`5.", Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[-2/3 + (4 y^(1/3))/3, {y, 1/2, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1:eJw1lH0w1AkYx1GxXkrJFrnOpEgqlrPl5e6+LOkFF6uNtjgU5dwRriMU2pRS
KG9dWN0xhMNwI3VF7F0pFJ06rbC/fflhLftzl3RKur2Zema+88zz1/P9fp6Z
Z01oNDtMQ01NbbdK/3f7o4mL1NQICLjakXP6Qph189eF+xC4/0eHZ2OqEF06
J9KzKwkEjRoSbrNCzOrLnP75l8DAjZCMoCMDWE5mfXlnhxiafvm86b4BjBW/
5O0sFSM8jKPJ3P4CLBPx6qVTYux1P6cR2/AC/skZsz9ul6CCYQ7rtYPYVxu3
NrNEAsHOi/sSLg2CKB/9qWlSgssDLcmWrwdhlkIPLXOXIipp01arQ0OQm3b/
0JkvxZJUe/+OB0MozrkvDCClqLO2Cgy0GoaOLPFktbMMf6nbH1+VO4x375rj
mRdksNBdqtn5chg1b+oaeVIZKlIG6cn7RfDokDs7OpK43EWtsW0TIYxba2x5
jkS8n+Je3hICLr1WjgMiEqTh4oSTLgRK9Wxr7zFGYEq3OcyPIvDbxr9Dv88Y
QWHddyyTawTaV70KPz88ghd75ZbMXgLevWl3hdaj8Fxvk3h9jkDekQf7JtJH
kUsTloZvEiO4o3CHQ/8oInVnjHMCxDCaqU5XWIyhqM30TCJPjEythIWhJ8Yg
T/Ae5zeIwRM96l/2eAzxlb+Ueg2KsfXq0MRpczn6TYwWW+hI0L/O1ufrJDk8
+S4QbJFg7thiWlyXHMzzynULgyUYrCpT32U2DhEtZTrkggSu5YLd3LhxTOa0
T8c1qbhHmU88EYwjl5vTHjYkAd+E1alnrICiJvjGIZoUNtmjc6kRCuTTZZEM
hhRJpEfMzTYFDlvtH5njSuGlYeO0wWACntW1q8pOSaFDcX3VQyfAuR1h6VAl
Ba/Vpbr45gSW87b5tv0pRdqeev8Y7UmcHZhiO8xK4fSo30M7ZBK3Z1rnC81k
ENHdT9OaJ3GwMVMxsksGbXPHFa5aSsTT+FKnozIoV4zJPw9SgtnVUhRxRYaA
HlOD2HolfjVIdrjeIkO9f1HGkvdKJLXoPlGIZWgX9LpEcSjcssrSn6eRCJjO
8taqoHCXPCCy20yiOzv9zfv3FBZpjbA5HBIb+Xr0zywJ/BxSYHRmhxAGLJ3y
BX0UbGdaL3q7kmCcdbtobEgg/FqEtvcmIZhF3Qnpdyg0H08pYG0lQY1t70mT
U8hkN3b6eZJofBv0UE+HQGyBXf36T4W437H5oEcDhf5Idz9nOxKp9KpbrGEK
TLMNbr4eJILujMjapikkCXTNOT4kXjZ9e1hzEYG6tXc7DVYKoR8U9LyihoJb
cgyabUg8rBFalz2nIN7mnNXjRqKCvZK7hqIQ+Op4yVNvEnSLG9HBbyhwOk6E
PGOTMMyN28LTIFBBBXSeXS6EfdWMQf91Cgt6poyOWZNQzsRE9D2jsNvnaGEW
i0RnSX2e7wQFOU5+kedFwinmq+qc1xTSAiu98n1JTA2sZjLeUdBqu3SQvodE
ufrrEld1AgXD2RaCZaq8j1mM6EoK+tHn5vtUvFM/aT0T+VTlp3jaUKnieeD3
tw3ycQoRybGa0ype3QVXOyxnKGwMtXN+pcp/Su0b9oO3Kl6k6NAxPxWfpicr
r8xTeFSbG9ik2vfxn6l9qI/3/Dj/B/5seqY=
               "], {{{}, {
                  EdgeForm[], 
                  Directive[
                   Opacity[0.1], 
                   RGBColor[0, 0, 1]], 
                  GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 
                    63, 68, 74, 55, 58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 
                    49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
                    35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
                    21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
                    71}}]}]}, {}, {}}}], {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1:eJwV0VlQkwcUBeAQRS1iMSiIFYNKCbhAFatEKT1TjMWlKDU0USuaSlFbVIYE
o2hBxUHBsokdcYmgkCLI6hIXkE0hjoJC0IZIErL+CRLEH0QEJLbpw50z39y5
L+fO3RmzKYpKoVBCbfN/EoUDr1paVNjuvTQ8974ctW1h5W2tKjgHcfeYquU4
N1qe9LJdhTuiGrZfrRxrNkQvVClUeJ63r7LmoRyl7w1/WIwqTKDNTepsliOO
9Y+Hg1WFBZOo6Y5dclD1d6NCfNVwZhbHbqJ2wGN2Qn9DuhrzhIuGd63rgHnm
oikD27sgFz9yFRk7cGqL59bV8zQo163voPMVyB7gPHmk08BfIFRcGVXANZWb
W7tZi52BTHpY2itsrLpGlt7XQh75WfNs5060+jk03Zunwye9W7zqSifGt51e
0Jmqw65Ey9FnC5QozK7wmdKjw/L9fcN/FSuRed5UFLFJj6qpSXG0JSoY6xoa
6m7pMerY6FNfpkLftOrogGkG0PMVyVsYaqBEmtNy2ADp6ZL4mGtqjEUKtwmU
BgSvde0PoXeBwmMWBLCM4DMcj/1+uQtVKW5HaCVG3Inz5Ge7aaBtF1nGHAhk
l63M+jdVg1De0i57AQHlhgKvBjstGE77f5vzkkDe0XCKdIUW39tVCzcHmeA5
Ypxcd0CLWXMYLoViEwQbfESvK7SI4C37wd7ejFRyflQGoYXJwLFP2mdGQYKH
0MlDB2WKO3dqqxkjQawYRrgOyVspK2/7dWNG5LCg8JQOwpih3APnuhFAz07s
rdXhxd9ZojUfupF3cWrp+34dDnoEua/gvQabl1Zzw0cPWdNEXzx+jXTpqmFl
hB456UI5x7sHLmX8/e8y9BCf/2CXltmDmbG1zsWP9Jjd5C5tJ3uwPjac+8ug
HuvpvFlfhVnAtq4suulpQH2VZKDorgXVfLIrg2NA/qGKnV+79SLQ58PqM8kG
NMdXh6uP9aIpVbfs83sG8ETRmhx9LypYTKdGkwHXLSs+7g5+g8z6B4XzpxsR
mPjFhZ+uvwHXWUIbtv2B6Z/XGj65D+aLwU10vhEJ85enxMb1Id5uHScv34iD
oRZZgbIPl/YEHZPJjFBns26bA99i4W7P4nirEadnVbqtFb/FhSbG9OhFBGR6
jUMXlcTGprZiHZcA8/nQj/n+JJLraoJ8kggEK123HthFwmtOxJmiCgLUkRQ/
2TkSvr6rWh6/InBQP+henEPi591e3ic6CfQ28yYfP09Cvar8yLdKAvJcZvfi
iyQSHO7QJCoC11ndV7MukxAoSvuvagiws0JcwsS2+7SK44cJAmLvCWPPb5A4
ukRKMPoJzKTxewpvkmh2PCnU2ZwxqlYk3iLhIrJSRAMEDj2TSPwkNg+6jKMN
EggVRMVk3CPxJ3u0enSIwFBtoz60jsRSw0S7Z2MEoosWy7zqSZjXJfmeshLQ
nhHVWW22vnjA/u4Tgae/xonKHpLwjoxLl/xLINfhS84UKYlLHmOSy1QTpg1m
sgib331zspI7zoQU9Uf/msckzpa8FNPGm8CvfOG07wkJ9tn6w8n2Jpgv4BPr
qW0/Y8c2TDBh24mSXvdmEjvGNQaM2Ny+d4Zy0GYv1VvHWxNNCOGceNLSYuvX
26DcO8mE/wCjMIal
                  "]]}}}}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {{
                 LineBox[
                  NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], Rational[-2, 3] + 
                    Rational[2, 3] 2^Rational[2, 3]}}, {{0.5, 0}, {0.5, 
                    0.39160070131213287`}}]], 
                 LineBox[
                  NCache[{{1, 0}, {1, 
                    Rational[2, 3]}}, {{1, 0}, {1, 0.6666666666666666}}]]}, 
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {77, 1}, 3, CompressedData["
1:eJwNxXssFHAAB/Bz62o7M5kROZGKXmR6ILPvZle0upJ0ZLSbUmuXLO8erFjr
WB75w9EuLS4JobgRy6PCcDmHTN2dO3fu4e7w6yaWR+v++OyzOzElKolKoVBs
rFhW2lrLT7FYju6xyKYxiRzla015k+NyRJznHpJPy9H4R/PQNCdHOvOHB31T
Dqq6PSncVwEP95zffUUK6F0P21muzuDplT1xp7yUKLOwh77OKuFcEFPVHavC
hc63pPGTChI/en+H1yy2jBUe/FUwi9qy5v12xlmUVOjqEqLUmOvp6+tpVWPR
sYsb6KgBGgb44vsabFzLjE+TaUDhBNUEMufQyXN54NAwB9W4wLRB14LFOTpD
S9PC2/7OLc9JLU7bdGXGhurg5untVCvUIYFz/ByNpodOw6blJesh4zFitkv0
eBJHOdnmZ0BmykpVRrkBE29KBRGrBmR5hDKCOfOQ9m/zxeA8+EWZU2wfI4QV
qzbPSoxw72cMjBMjzu7iuB2JNKG3U2SpazehOrs58ZiLGSP3uqIVj8zgCLhK
vtqMelPw+s2wBYTk7qy8XL+AoIBXkmjbReQcOMG7m76ILJZJWiNbhKKM2aYP
WUKhW4vLGeESpGolfYZKEDS6crE6gCBM5hyXcYOA+pfnJy0nyFIvM97xCcwj
HNvHFQRTVUEG/xcE9UzD69KXBJdKw50ihQRCn60box8IXB1SjbUfCYrXFNO5
rQTZ30UiPxEBKy0ppbiDYKX7m5rVQ8Ct85fu6yVQPRf0bFofvp4ueP+FoIq+
l203QOC4XMLUWucp1gM+DxKktkzYJw8R6CvxjzlMEJ/fYGaMEIzf3iFbth7O
zh8Siwn+AwHqTPI=
                    "], CompressedData["
1:eJwNxXssFHAAB/BjXW1nJjMiJ1LRi0wPJ7PvZle0upJ0ZLSbUmuXLO8erFjr
WB75w6Nd1+K6hFAYsRwVhss5ZOrunHufu8MvE8uj5Y/PPrsTU6KSbCgUCmuT
XrT4UyJRoHs0snFUqkD5amPexJgCEee5hxRTCjT80T606BRIZ/7wpG0oYKtp
Twr3U8LTI+d3b5ESRrfD9otXp/H0yp64U94qlC2yB7+qVXApiBF0x87gQudb
0vBpBlJ/Wl+HtxpbRgsP/ipQQ1TWtN/erEZJpaE2IUoDnbi3V9yiwbxTFzfI
SQvU91dI7muxfi0zPk2uBYXDqAli6tDJc33gWK/DzBjfsk7Tg8U5Ok1N08PH
4c4trwk9Ttt0ZcaGGuDu5eMsEhqQwDl+jko1wqBlU/OSjZDz6DHbpUY8iaOc
bPU3ITNlWZBRbsL4m1J+xIoJWZ6h9GDOLGR92/wwMIuKosxJtq8ZwsoVm2cl
Znj00fvHiBlnd3Hcj0Ra0NPZtljbbkF1dlPiMVcrhu91RSsfWcHhc1UVGivq
LMFrN8PmEJK7s+py3RwYga+k0XbzyDlwgnc3fR5ZLIusRj4PZRmz1RiygEL3
ZtczwgXINCratC0BY2T5YnUgQZjcJS7jBoHtX56/rJwgS7NEf1dBYB3m2D2u
JJgUMEwBLwjqmKbXpS8JLpWGO0cKCYS+W9dHPhC4OaaaRR8JileVU7ktBNnf
29r82whYaUkpxR0Ey93fNCwxAbc2QLavh2DmOV+8sfnQ9XT++y8EAtpetn0/
gdNSCVO/OU+5Fvh5gCC1edwheZDAWIV/zCGC+Px6K32YYOz2DvnS5uHs/EGJ
hOA/9ktM8A==
                    "], CompressedData["
1:eJwV0VlQkwcUBeAQRS1iMSiIFYNKCbhAFatEKT1TjMWlKDU0USuaSlFbVIYE
o2hBxUHBsokdcYmgkCLI6hIXkE0hjoJC0IZIErL+CRLEH0QEJLbpw50z39y5
L+fO3RmzKYpKoVBCbfN/EoUDr1paVNjuvTQ8974ctW1h5W2tKjgHcfeYquU4
N1qe9LJdhTuiGrZfrRxrNkQvVClUeJ63r7LmoRyl7w1/WIwqTKDNTepsliOO
9Y+Hg1WFBZOo6Y5dclD1d6NCfNVwZhbHbqJ2wGN2Qn9DuhrzhIuGd63rgHnm
oikD27sgFz9yFRk7cGqL59bV8zQo163voPMVyB7gPHmk08BfIFRcGVXANZWb
W7tZi52BTHpY2itsrLpGlt7XQh75WfNs5060+jk03Zunwye9W7zqSifGt51e
0Jmqw65Ey9FnC5QozK7wmdKjw/L9fcN/FSuRed5UFLFJj6qpSXG0JSoY6xoa
6m7pMerY6FNfpkLftOrogGkG0PMVyVsYaqBEmtNy2ADp6ZL4mGtqjEUKtwmU
BgSvde0PoXeBwmMWBLCM4DMcj/1+uQtVKW5HaCVG3Inz5Ge7aaBtF1nGHAhk
l63M+jdVg1De0i57AQHlhgKvBjstGE77f5vzkkDe0XCKdIUW39tVCzcHmeA5
Ypxcd0CLWXMYLoViEwQbfESvK7SI4C37wd7ejFRyflQGoYXJwLFP2mdGQYKH
0MlDB2WKO3dqqxkjQawYRrgOyVspK2/7dWNG5LCg8JQOwpih3APnuhFAz07s
rdXhxd9ZojUfupF3cWrp+34dDnoEua/gvQabl1Zzw0cPWdNEXzx+jXTpqmFl
hB456UI5x7sHLmX8/e8y9BCf/2CXltmDmbG1zsWP9Jjd5C5tJ3uwPjac+8ug
HuvpvFlfhVnAtq4suulpQH2VZKDorgXVfLIrg2NA/qGKnV+79SLQ58PqM8kG
NMdXh6uP9aIpVbfs83sG8ETRmhx9LypYTKdGkwHXLSs+7g5+g8z6B4XzpxsR
mPjFhZ+uvwHXWUIbtv2B6Z/XGj65D+aLwU10vhEJ85enxMb1Id5uHScv34iD
oRZZgbIPl/YEHZPJjFBns26bA99i4W7P4nirEadnVbqtFb/FhSbG9OhFBGR6
jUMXlcTGprZiHZcA8/nQj/n+JJLraoJ8kggEK123HthFwmtOxJmiCgLUkRQ/
2TkSvr6rWh6/InBQP+henEPi591e3ic6CfQ28yYfP09Cvar8yLdKAvJcZvfi
iyQSHO7QJCoC11ndV7MukxAoSvuvagiws0JcwsS2+7SK44cJAmLvCWPPb5A4
ukRKMPoJzKTxewpvkmh2PCnU2ZwxqlYk3iLhIrJSRAMEDj2TSPwkNg+6jKMN
EggVRMVk3CPxJ3u0enSIwFBtoz60jsRSw0S7Z2MEoosWy7zqSZjXJfmeshLQ
nhHVWW22vnjA/u4Tgae/xonKHpLwjoxLl/xLINfhS84UKYlLHmOSy1QTpg1m
sgib331zspI7zoQU9Uf/msckzpa8FNPGm8CvfOG07wkJ9tn6w8n2Jpgv4BPr
qW0/Y8c2TDBh24mSXvdmEjvGNQaM2Ny+d4Zy0GYv1VvHWxNNCOGceNLSYuvX
26DcO8mE/wCjMIal
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1:eJwNxXssFHAAB/BjXW1nJjMiJ1LRi0wPJ7PvZle0upJ0ZLSbUmuXLO8erFjr
WB75w6Nd1+K6hFAYsRwVhss5ZOrunHufu8MvE8uj5Y/PPrsTU6KSbCgUCmuT
XrT4UyJRoHs0snFUqkD5amPexJgCEee5hxRTCjT80T606BRIZ/7wpG0oYKtp
Twr3U8LTI+d3b5ESRrfD9otXp/H0yp64U94qlC2yB7+qVXApiBF0x87gQudb
0vBpBlJ/Wl+HtxpbRgsP/ipQQ1TWtN/erEZJpaE2IUoDnbi3V9yiwbxTFzfI
SQvU91dI7muxfi0zPk2uBYXDqAli6tDJc33gWK/DzBjfsk7Tg8U5Ok1N08PH
4c4trwk9Ttt0ZcaGGuDu5eMsEhqQwDl+jko1wqBlU/OSjZDz6DHbpUY8iaOc
bPU3ITNlWZBRbsL4m1J+xIoJWZ6h9GDOLGR92/wwMIuKosxJtq8ZwsoVm2cl
Znj00fvHiBlnd3Hcj0Ra0NPZtljbbkF1dlPiMVcrhu91RSsfWcHhc1UVGivq
LMFrN8PmEJK7s+py3RwYga+k0XbzyDlwgnc3fR5ZLIusRj4PZRmz1RiygEL3
ZtczwgXINCratC0BY2T5YnUgQZjcJS7jBoHtX56/rJwgS7NEf1dBYB3m2D2u
JJgUMEwBLwjqmKbXpS8JLpWGO0cKCYS+W9dHPhC4OaaaRR8JileVU7ktBNnf
29r82whYaUkpxR0Ey93fNCwxAbc2QLavh2DmOV+8sfnQ9XT++y8EAtpetn0/
gdNSCVO/OU+5Fvh5gCC1edwheZDAWIV/zCGC+Px6K32YYOz2DvnS5uHs/EGJ
hOA/9ktM8A==
                    "] -> CompressedData["
1:eJwV0VlQkwcUBeAQRS1iMSiIFYNKCbhAFatEKT1TjMWlKDU0USuaSlFbVIYE
o2hBxUHBsokdcYmgkCLI6hIXkE0hjoJC0IZIErL+CRLEH0QEJLbpw50z39y5
L+fO3RmzKYpKoVBCbfN/EoUDr1paVNjuvTQ8974ctW1h5W2tKjgHcfeYquU4
N1qe9LJdhTuiGrZfrRxrNkQvVClUeJ63r7LmoRyl7w1/WIwqTKDNTepsliOO
9Y+Hg1WFBZOo6Y5dclD1d6NCfNVwZhbHbqJ2wGN2Qn9DuhrzhIuGd63rgHnm
oikD27sgFz9yFRk7cGqL59bV8zQo163voPMVyB7gPHmk08BfIFRcGVXANZWb
W7tZi52BTHpY2itsrLpGlt7XQh75WfNs5060+jk03Zunwye9W7zqSifGt51e
0Jmqw65Ey9FnC5QozK7wmdKjw/L9fcN/FSuRed5UFLFJj6qpSXG0JSoY6xoa
6m7pMerY6FNfpkLftOrogGkG0PMVyVsYaqBEmtNy2ADp6ZL4mGtqjEUKtwmU
BgSvde0PoXeBwmMWBLCM4DMcj/1+uQtVKW5HaCVG3Inz5Ge7aaBtF1nGHAhk
l63M+jdVg1De0i57AQHlhgKvBjstGE77f5vzkkDe0XCKdIUW39tVCzcHmeA5
Ypxcd0CLWXMYLoViEwQbfESvK7SI4C37wd7ejFRyflQGoYXJwLFP2mdGQYKH
0MlDB2WKO3dqqxkjQawYRrgOyVspK2/7dWNG5LCg8JQOwpih3APnuhFAz07s
rdXhxd9ZojUfupF3cWrp+34dDnoEua/gvQabl1Zzw0cPWdNEXzx+jXTpqmFl
hB456UI5x7sHLmX8/e8y9BCf/2CXltmDmbG1zsWP9Jjd5C5tJ3uwPjac+8ug
HuvpvFlfhVnAtq4suulpQH2VZKDorgXVfLIrg2NA/qGKnV+79SLQ58PqM8kG
NMdXh6uP9aIpVbfs83sG8ETRmhx9LypYTKdGkwHXLSs+7g5+g8z6B4XzpxsR
mPjFhZ+uvwHXWUIbtv2B6Z/XGj65D+aLwU10vhEJ85enxMb1Id5uHScv34iD
oRZZgbIPl/YEHZPJjFBns26bA99i4W7P4nirEadnVbqtFb/FhSbG9OhFBGR6
jUMXlcTGprZiHZcA8/nQj/n+JJLraoJ8kggEK123HthFwmtOxJmiCgLUkRQ/
2TkSvr6rWh6/InBQP+henEPi591e3ic6CfQ28yYfP09Cvar8yLdKAvJcZvfi
iyQSHO7QJCoC11ndV7MukxAoSvuvagiws0JcwsS2+7SK44cJAmLvCWPPb5A4
ukRKMPoJzKTxewpvkmh2PCnU2ZwxqlYk3iLhIrJSRAMEDj2TSPwkNg+6jKMN
EggVRMVk3CPxJ3u0enSIwFBtoz60jsRSw0S7Z2MEoosWy7zqSZjXJfmeshLQ
nhHVWW22vnjA/u4Tgae/xonKHpLwjoxLl/xLINfhS84UKYlLHmOSy1QTpg1m
sgib331zspI7zoQU9Uf/msckzpa8FNPGm8CvfOG07wkJ9tn6w8n2Jpgv4BPr
qW0/Y8c2TDBh24mSXvdmEjvGNQaM2Ny+d4Zy0GYv1VvHWxNNCOGceNLSYuvX
26DcO8mE/wCjMIal
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     2]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     3]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, AxesOrigin -> {Automatic, 0},
               PlotRange -> All, ImageSize -> 200, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
              AxesLabel -> {None, None}, AxesOrigin -> {0.5, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                LineBox[
                 NCache[{{
                    Rational[1, 2], 0}, {
                    Rational[1, 2], Rational[-2, 3] + 
                    Rational[2, 3] 2^Rational[2, 3]}}, {{0.5, 0}, {0.5, 
                   0.39160070131213287`}}]], 
                LineBox[
                 NCache[{{1, 0}, {1, 
                    Rational[2, 3]}}, {{1, 0}, {1, 0.6666666666666666}}]]}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"AxesInFront" -> True}, 
              PlotRange -> {{0.45, 1.05}, {0, 0.6885284704851294}}, 
              PlotRangeClipping -> True, 
              PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]], " ", 
                    TemplateBox[{
                    RowBox[{"-", 
                    FractionBox["1", "3"]}], "n"}, "HurwitzZeta"]}]}], "+", 
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]], " ", 
                    TemplateBox[{
                    RowBox[{"-", 
                    FractionBox["1", "3"]}], 
                    RowBox[{"2", " ", "n"}]}, "HurwitzZeta"]}], "+", 
                    SuperscriptBox["n", 
                    RowBox[{"4", "/", "3"}]]}], 
                    RowBox[{"3", " ", 
                    SuperscriptBox["n", 
                    RowBox[{"4", "/", "3"}]]}]]}], "\[LongEqual]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["2", "3"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    RadicalBox["2", "3"]}]]}], ")"}], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]], "-", 
                    RowBox[{"2"}]}], 
                    RowBox[{"6", " ", "n"}]], "+", 
                    FractionBox[
                    RowBox[{
                    FractionBox["1", "108"], "-", 
                    FractionBox["1", 
                    RowBox[{"54", " ", 
                    RadicalBox["2", "3"]}]]}], 
                    SuperscriptBox["n", "2"]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "n"], ")"}], 
                    RowBox[{"10", "/", "3"}]], ")"}], 
                    SeriesData[$CellContext`n, 
                    DirectedInfinity[1], {}, 0, 10, 3], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"n", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["2", "3"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]]}]]}], ",", "0", ",", "0", ",", 
                    RowBox[{
                    FractionBox["1", "6"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]]}], ")"}]}], ",", "0", ",", "0", 
                    ",", 
                    RowBox[{
                    FractionBox["1", "108"], "-", 
                    FractionBox["1", 
                    RowBox[{"54", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"1", "/", "3"}]]}]]}]}], "}"}], ",", "0", ",", 
                    "10", ",", "3"}], "]"}]}, "SeriesData", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    Identity]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$870964$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
870969$$ = 0, CalculateScan`RiemannSumScanner`Private`method$870970$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$870964$$\
, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$870969$$\
, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$870970$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 - 
                    Rational[1, 2])/
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], {$CellContext`y, 0.45, 1.05}, 
                    PlotRange -> {{0.45, 1.05}, {-0.06666666666666665, 
                    0.7333333333333333}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    Rational[
                    1, 2] + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    N[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], $CellContext`y -> 
                    Rational[1, 2] + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 
                    TildeTilde[
                    Rational[1, 12] (8 - 3 2^Rational[2, 3]), 
                    0.2698164036746168]}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - Rational[1, 12] (8 - 3 2^Rational[2, 3])]}]}}, 
                    Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    Rational[-2, 3] + 
                    Rational[4, 3] $CellContext`y^
                    Rational[1, 3], {$CellContext`y -> 
                    Rational[1, 2] + 
                    CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/APkPiMxKuohDSxDcakASUp3+\
vFl9TCtYPtbIM/Dz67SZq1qxTTAZrSD6f60jy+e+656z06lFHa7/V6+\
rI1HySn6TU8PbRmR85yWQj67iRXoDWTIr2Ez25aE4PZBU5+APW+q9a8l2pGjD+/\
wfcJTwpODHw1jDPDQE/2FMmnLNG1Z6TYkf3JhMuEcPYTHr9+\
NXw5HHoUDGVEjAEl9PO2iPlUEQ1pD4GuWLPNifjmjw/K46eC8xi+\
FyAS0Pesd6wItTBSEI7pBN96oYm6jXkZIihR9NxZcuLcbnuBNoqJbAyzHN84k6unbXGJyrSn5k5JzT\
r9+Oiv4wMZu5C8x+Xszo6/sDAuFnunRfXPqRvgeastvJLHK3nD9N5ypI0YdgR6mc0nravkCala1gU/\
p+qcZstGYzx7wtT/SAdMm+UwnrUNA2aHtsKrlbcM/6ItvMyx5efSvmvNZ+8oAVdNhkpuHyUt+\
DyKZsoDL9D26ercOjzGrYrvGJ0hFaxwIhtn2S2uO+\
5X4PWOEGPtJhuQjqgnQAQ5WBd13O6yjJmdKVEkscDz6/\
plj41lHUrAne1rzwRldnx5QtatTWj204W6E5NMv/\
xRcSu5nGoy5H1fGMhArRX9DayPsuQKOpaBkcR4QVOvwRxWSY2ICpb9oASJcyIYQrJf9uO++\
YeLlUCq9hSqS3kWB640J+\
FJ9MsCH4DIzLS5XQeOruC2xWwieVyrLmJpujhtNsd0v8l044bmQA8lIbQk4QO92xO6PeEv7glLO3C3\
JHRLQrckdEtCtyT8v0uCixj/lX4DPta3hg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> "RiemannSums__More cases"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "\[Zeta](s, a) is the Hurwitz zeta function"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/HurwitzZeta.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ZetaFunctionsandPolylogarithms/\
Zeta2", "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HurwitzZetaFunction.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"s", "a"}, "HurwitzZeta"], "\" \"", 
                "\"is the Hurwitz zeta function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[-2/3 + (4 y^(1/3))/3, y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["y", "3"]}], "3"], "-", 
                    FractionBox["2", "3"]}], HoldForm], ")"}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox["2", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox["y", 
                    RowBox[{"4", "/", "3"}]]}], "2"], "-", "y"}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["y", "3"]}], "3"], "-", 
                    FractionBox["2", "3"]}], ")"}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate the sum term by term and factor out \
constants:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    FractionBox["4", "3"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RadicalBox["y", "3"], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["2", "3"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{"1", 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The integral of \"", 
                    RadicalBox["y", "3"], "\" is \"", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox["y", 
                    RowBox[{"4", "/", "3"}]]}], "4"], "\":\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \[LongEqual] \"", 
                    RowBox[{
                    SuperscriptBox["y", 
                    RowBox[{"4", "/", "3"}]], "-", 
                    RowBox[{
                    RowBox[{
                    FractionBox["2", "3"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{"1", 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The integral of \"", "1", "\" is \"", "y", "\":\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    SuperscriptBox["y", 
                    RowBox[{"4", "/", "3"}]], "-", 
                    FractionBox[
                    RowBox[{"2", " ", "y"}], "3"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Which is equal to:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer\"", "\":\""}, "RowDefault"], 
                    FontFamily -> "Arial", FontSize -> 12, StripOnInput -> 
                    False], "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox["2", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox["y", 
                    RowBox[{"4", "/", "3"}]]}], "2"], "-", "y"}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, GridBoxBackground -> {"Columns" -> {{
                    RGBColor[{1., 0.984313725490196, 0.6745098039215687}]}}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False, FrameStyle -> 
                    RGBColor[{0.8196078431372549, 0.788235294117647, 
                    0.16078431372549018`}]], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod5$$, 
   Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, 
   Typeset`pod34$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "3.8890000000000002", "parsetiming" -> "1.3880000000000001", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa2079212723afad92i6df00003bg052a6dighaggh4818584333534952213", "id" -> 
     "MSPa2080212723afad92i6df0000186g857echb0ef90", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "59", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa2081212723afad92i6df00006232f3cfh77528ae4818584333534952213", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "2.2560000000000002", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "15", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 22, 55, 3.3321413`8.275298390431548}, "Line" -> 19,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate  (4/3 Power[y, (3)^-1] - 2/3) from 1/2 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {730., 736.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa2079212723afad92i6df00003bg052a6dighaggh4818584333534952213", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028049034000034`*^9},ExpressionUUID->"6355ba4b-4fcd-4634-8856-\
01e807fd5ca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "integrate (integrate 4/3 dx from ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fb0d3fe8-2260-4aa9-87ff-133c17c4dbb8"],
 " to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", 
    FractionBox["1", "3"]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "865d6be4-e11c-4f1c-b465-1e6079896473"],
 ") dy from 1/2 to 1"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.7028023910706873`*^9, 3.7028023960191655`*^9}, {
  3.702802502884135*^9, 
  3.7028025443832655`*^9}},ExpressionUUID->"d15a53ef-37ec-4a99-b7e7-\
2b43fa76e738"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "integrate (integrate 4/3 dx from 1/2 to y^(1/3)) dy from 1/2 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"N[Integrate[4/3, {y, 1/2, 1}, {x, 1/2, y^(1/3)}]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  FractionBox["1", "2"], "1"], 
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    FractionBox["1", "2"], 
                    RadicalBox["y", "3"]], 
                   RowBox[{
                    FractionBox["4", "3"], 
                    RowBox[{"\[DifferentialD]", "x"}], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["1", "12"], " ", 
                 RowBox[{"(", 
                   RowBox[{"8", "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["2", 
                    RowBox[{"2", "/", "3"}]]}]}], ")"}]}], Identity], 
              "\[TildeTilde]", 
              TagBox["0.2698164036746168`", Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}]}]}], 
   Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, 
   Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, 
   Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, 
   Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, 
   Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, 
   Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, 
   Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, 
   Typeset`pod30$$, Typeset`pod31$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "2.6350000000000002", "parsetiming" -> "1.51", "parsetimedout" -> 
     "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12671b82iie39169hhf200005gfg51dai65hfe755519968298482519218", "id" -> 
     "MSPa12681b82iie39169hhf200004e167ab674b7d092", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "47", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa12691b82iie39169hhf2000066g6g0h0213343a45519968298482519218", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.779", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "54", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 22, 15, 51.343332`9.463058899476255}, "Line" -> 16,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
    17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate (integrate 4/3 dx from 1/2 to y^(1/3)) dy from 1/2 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{676., {64., 70.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12671b82iie39169hhf200005gfg51dai65hfe755519968298482519218", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028025514370375`*^9},ExpressionUUID->"798fab9a-4787-4662-b9b8-\
30a45bd0b89a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 5", "Subsection",
 CellChangeTimes->{{3.7027692272560525`*^9, 
  3.7027692289560523`*^9}},ExpressionUUID->"43022852-8966-4784-8915-\
2a7c73882d98"],

Cell[CellGroupData[{

Cell["a)", "Subsubsection",
 CellChangeTimes->{{3.702769243624048*^9, 
  3.7027692459000564`*^9}},ExpressionUUID->"13dc064c-fa20-4af3-bfa7-\
c0e9ae05f61c"],

Cell[CellGroupData[{

Cell[TextData[{
 "differentiate (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Ln", "[", 
     RowBox[{"y", "^", "c"}], "]"}], "+", 
    RowBox[{"Ln", "[", 
     SuperscriptBox["E", 
      RowBox[{"-", "ny"}]], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "04b8b933-a4d2-48f0-8c66-9355f95ac031"],
 ")/\[DifferentialD]y"
}], "WolframAlphaLong",
 CellChangeTimes->{{3.7027692571560373`*^9, 3.7027693048401165`*^9}, {
  3.702770145652714*^9, 3.702770156912721*^9}, {3.702770227766678*^9, 
  3.702770302973445*^9}, {3.7027705362885203`*^9, 
  3.702770578672559*^9}},ExpressionUUID->"1413d0eb-958e-4392-93e9-\
77893a14f1fe"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "differentiate (Ln[y^c] + Ln[E^-ny])/\[DifferentialD]y", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                PaneBox[
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"differentiate\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}]}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   $CellContext`TagBoxWrapper["Separator" -> " "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 BaselinePosition -> Center]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnsEqual -> False, RowsEqual -> False, 
              GridBoxSpacings -> {"Columns" -> {{
                   AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
              AllowScriptLevelChange -> False], 
             $CellContext`TagBoxWrapper["Separator" -> " "]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"log", "(", "x", ")"}], "\" \"", 
                "\"is the natural logarithm\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Partial derivatives", "scanner" -> "Derivative", "id" -> 
     "PartialDerivatives", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Log[E^(-(n y))] + Log[y^c], n]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "n"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}]}], ")"}]}], 
                 TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], "\[LongEqual]", 
              TagBox[
               RowBox[{"-", "y"}], Identity]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Log[E^(-(n y))] + Log[y^c], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}]}], ")"}]}], 
                 TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], "\[LongEqual]", 
              TagBox[
               RowBox[{
                 FractionBox["c", "y"], "-", "n"}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solutions", "input" -> 
         "PartialDerivatives__Step-by-step solutions"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Derivative", "id" -> "3DPlot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot3D[-y, {x, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`density$$ = 15, 
                 CalculateUtilities`GraphicsUtilities`Private`max2802$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max2804$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min2801$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min2803$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`xmesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$], 
                    True, "x"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$], 
                    True, "y"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$], 
                    False, "z"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$], 
                    15, "mesh density"}, 1, 30, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2254100$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min2801$\
2254101$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2802$2254102$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min2803$\
2254107$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max2804$2254108$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`xmesh$\
2254109$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`ymesh$2254110$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`zmesh$\
2254111$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`density$2254112$\
$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`density$$ = 
                    15, CalculateUtilities`GraphicsUtilities`Private`max2802$$\
 = 0.5, CalculateUtilities`GraphicsUtilities`Private`max2804$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min2803$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, CalculateUtilities`GraphicsUtilities`Private`xmesh$\
$ = True, CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2254100$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2801$\
2254101$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2802$\
2254102$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`min2803$\
2254107$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max2804$\
2254108$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$\
2254109$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$\
2254110$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$\
2254111$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    CalculateUtilities`GraphicsUtilities`Private`density$\
2254112$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Function[Null, 
                    
                    Plot3D[#, #2, #3, Mesh -> 
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    MeshFunctions :> Flatten[{
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, #& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, #2& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, #3& \
, {}]}], 
                    SlotSequence[4]], 
                    HoldAll][-$CellContext`y, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$]], 
                    1]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$]], 
                    1]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, BoxRatios -> Automatic, 
                    PlotLabel -> RawBoxes[
                    FormBox[
                    StyleBox[
                    RowBox[{"-", "y"}], FontFamily -> "Verdana", FontSize -> 
                    10, StripOnInput -> False], TraditionalForm]], 
                    ImageSize -> {300.}, PlotRange -> Automatic, 
                    ClippingStyle -> Opacity[0.25], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, MeshStyle -> 
                    Opacity[0.45], Mesh -> 20, ColorFunction :> (Blend[{
                    RGBColor[0.628962, 0.149248, 0.135592], 
                    RGBColor[1., 0.634379, 0.186801], 
                    RGBColor[1., 0.895537, 0.582162], 
                    RGBColor[1., 0.995346, 0.826535]}, #3]& ), AxesStyle :> 
                    Directive[
                    GrayLevel[0.65], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BoxStyle :> GrayLevel[0, 0.35]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2801$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2802$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min2803$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max2804$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, {{
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    True, "x"}, {True, False}, ControlPlacement -> 5}, {{
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    True, "y"}, {True, False}, ControlPlacement -> 6}, {{
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    False, "z"}, {True, False}, ControlPlacement -> 7}, {{
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    15, "mesh density"}, 1, 30, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 8}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVtuO0zAQbSn3O/wBEs9ItCDBAxLQXZaVFihJea83mSQWrh1sZy/\
8PHjsJmm23UoxXUCr9GFUT5rjmTNnpvPkUARJv9frqavGfBQsTm7g6bExYzHPRcHj3ZNcglJU8OQKP\
rttTAh6Bxg5hdj5rhvzQcg50e78Bt8nLCoY0fBNU0Y1BTXbkyTPaKRqz0TSI/\
OTGRMRYfQnPB0OX45ejV47GIxlQrQGydWoLWSeSaIg6SHQNWPeM8K/u+\
Oj8vi5YCyEHwXwCNQD451KEhsYwQnDfLxvvdxM3cXENOExkfGF02TlOW57gdKS8nQK8xzfOJ+\
s522BiUyV4+Zeyc0mBbnwb+IDEdqYnMcmbc+WQL8wLhl9Z2X1z7kb4PltW3gpjtcTh/\
m9Y8gb0fQI1Cqdz1rXyTFSda2NfsHVRc2XrQZ5/pSp/5cOqNKrYQzbhgHzQ1Pj9dpbhX/\
RFl7k2PULcd835otzlIDrhkMluE8iLtgiimbKAyfR9umq3Dgcxp2K7xCdPhWscAITZ9kvtj8eVuD1p\
hBi7WZbkA6vZ0AAORhXbLndoSnV44xIEhngxXX9ssmmog7F4872tac8pmaAOUI2LU9o9pOluhMdZV/\
/qLiVXM40GfK+zzWkIDeK/hbWRxpyeTwVnpGEeEFTr94cVklNiPSW/aAECXPCKULSX+\
Zjv7mHy5VAqvYkqks6Fge2NCf+\
SfTLAh8AT3XW3LE9R5d322I2gTiuVRfQJFmeNttjut9kunFDc6D7kuBbEv+\
B3m0K3abwVzeFlT24WxO6NaFbE7o1oVsT/t81wUaM/0q/AUVquJ4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Derivative", "id" -> 
     "ContourPlot", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ContourPlot[-y, {x, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max1037$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`max1039$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min1036$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min1038$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$782479$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min1036$\
782484$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max1037$782485$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min1038$\
782486$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max1039$782487$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max1037$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`max1039$\
$ = 0.5, CalculateUtilities`GraphicsUtilities`Private`min1036$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$782479$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1036$\
782484$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max1037$\
782485$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1038$\
782486$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max1039$\
782487$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    ContourPlot[-$CellContext`y, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$]], 
                    1]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$]], 
                    (Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$]], 
                    1]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AspectRatio -> Automatic,
                     PlotLabel -> RawBoxes[
                    FormBox[
                    StyleBox[
                    RowBox[{"-", "y"}], FontFamily -> "Verdana", FontSize -> 
                    10, StripOnInput -> False], TraditionalForm]], 
                    ImageSize -> {300.}, ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min1036$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max1037$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["x", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min1038$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max1039$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/APkPiMtIIESEhoLzAmDShJ+\
V4vvjQWrh1sZxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/JkYzSfq/X01et+SA5TW/\
g6bE1u3KWy0LQd6e5Aq2ZFOkVfHbbmhjMHnDyA6j3XbfmvVQzYvz5Db5PeFJwYuCrYZwZBnqyr0ies\
UTXnpFix/YnEy4TwtlPePry1XC49dqjYCgjYgwooZ+3RcwzRTSkPQS6Zs0OJ+\
KbPz4qj58KzmP4XoBIQD+w3rEi1MJIQTimE3zrpSbqLuZliKBE0QtnyYlzp+\
0F2igmpmOY5fjGuVxttcUlaqo9NfdKatbpx0d/Ex/I2IXkPS5nd3b8hYVxudg7K6p/Tt0Az2/\
bwit5spI3TG+bI23EsGPQy2w+a10lT0jVsi74OVUXNFs2GuP5E6b+Rzpk2iyHMWwbBsyObIVXK28Z/\
kVbeJljy8+lfd+\
az95RAq6aDJXcPkpa8HkUzZQHXqDt09W5dXiMOxXfMTpDKljhRDbOsltcdzyswOsdIcbaTTYgHVFPg\
AhysC7quN1jU2Z2M6JIYoHn1/\
XLHhvLOpSAO9vXngnK7PjyhKxbm9AcpAt1JybJvvxRcSu5nGky5P1AGJiCWiv6W1gfZckVdCwDI4nx\
gqZegzmskhoRFSz7QQkS50QwhGS/7Md98w8XK4FU7StUl/\
IsDlxpTsOT6JcFPgQxNVlzuw4cXcFti9lE8qRWXcTSdHHabI7pfpPpxg3NgR5KQmhJwgd6tyd0e8Jf\
3BOWduBuSeiWhG5J6JaEbkn4f5cEFzH+K/0GKUe2/g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Total derivatives", "scanner" -> "Derivative", "id" -> 
     "TotalDerivatives", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Dt[Log[E^(-(n y))] + Log[y^c], n]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TemplateBox[{
                 FractionBox["\"\[DifferentialD]\"", 
                  RowBox[{"\"\[DifferentialD]\"", " ", "n"}]], 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}]}], ")"}]}, "RowDefault"], 
               HoldForm], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "y"], "-", "n"}], ")"}], " ", 
                  FractionBox[
                   RowBox[{"\[DifferentialD]", "y"}], 
                   RowBox[{"\[DifferentialD]", "n"}], MultilineFunction -> 
                   None]}], "-", "y"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Dt[Log[E^(-(n y))] + Log[y^c], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TemplateBox[{
                 FractionBox["\"\[DifferentialD]\"", 
                  RowBox[{"\"\[DifferentialD]\"", " ", "y"}]], 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}]}], ")"}]}, "RowDefault"], 
               HoldForm], "\[LongEqual]", 
              RowBox[{
                FractionBox["c", "y"], "-", 
                RowBox[{"y", " ", 
                  FractionBox[
                   RowBox[{"\[DifferentialD]", "n"}], 
                   RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                   None]}], "-", "n"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Differential", "scanner" -> "Derivative", "id" -> 
     "Differential", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TemplateBox[{"\"\[DifferentialD]\"", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "n"}], " ", "y"}]], ")"}], "+", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["y", "c"], ")"}]}], ")"}]}, "RowDefault"], 
               HoldForm], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  RowBox[{
                    TagBox["\[DifferentialD]", Dt], "y"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    FractionBox["c", "y"], "-", "n"}], ")"}]}], "-", 
                RowBox[{"y", " ", 
                  RowBox[{
                    TagBox["\[DifferentialD]", Dt], "n"}]}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`pod36$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False, False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "differentiate (Ln[y^c] + Ln[E^-ny])", "score" -> "0.9375", "level" -> 
        "high"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
     "D", "timedout" -> "", "timedoutpods" -> "", "timing" -> "4.873", 
     "parsetiming" -> "0.516", "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12351ga375e17i84a82500002f9a24cf601befah&s=44", "id" -> 
     "MSPa12361ga375e17i84a825000024d2b8ge68162i3h", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "44", "related" -> "", 
     "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "D", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.316", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www3.wolframalpha.com", "server" -> "44", 
     "related" -> "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 13, 23, 11.7965045`8.82432829686538}, "Line" -> 13,
     "SessionID" -> 18268248686573105205}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "differentiate (Ln[y^c] + Ln[E^-ny])/\[DifferentialD]y"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
         Typeset`pod36$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {701., 707.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
          Typeset`pod36$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12351ga375e17i84a82500002f9a24cf601befah&s=44", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7027705918764906`*^9},ExpressionUUID->"d5a1823f-a2b7-416f-9c8b-\
cc83735015a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 6", "Subsection",
 CellChangeTimes->{{3.702791983138367*^9, 3.7027919876259604`*^9}, {
  3.7027922940960193`*^9, 
  3.70279229538031*^9}},ExpressionUUID->"92e125c4-04a3-4baf-89a5-\
3d989bf6edf2"],

Cell[CellGroupData[{

Cell["a)", "Subsubsection",
 CellChangeTimes->{{3.702792307898034*^9, 
  3.7027923089785147`*^9}},ExpressionUUID->"7fe481fe-eeef-450b-ab70-\
5eab3f09b1dc"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"d", "/", 
   RowBox[{"dy", "(", 
    RowBox[{"Ln", "[", 
     RowBox[{"a", "*", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         SuperscriptBox["y", "2"]], ")"}], "n"], "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", "b"}], "y"], "]"}]}], "]"}], ")"}]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"edc13271-2957-4e09-9991-13f05c31ffb7"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.7027920200460567`*^9, 3.702792051856822*^9}, {
  3.702792173609724*^9, 3.7027922583125825`*^9}, {3.702799204259243*^9, 
  3.702799276318386*^9}, {3.702799449591099*^9, 3.7027994538946543`*^9}, {
  3.7027994906573305`*^9, 3.7027994906573305`*^9}, {3.702800453732888*^9, 
  3.7028004547641153`*^9}, {3.702800689207366*^9, 
  3.7028006911563854`*^9}},ExpressionUUID->"f303bffb-8534-4809-842f-\
bd84785d4586"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "d/dy(Ln[a*(1/y^2)^n*Exp[-b/y]])", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Log[(a (y^(-2))^n)/E^(b/y)], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{"log", "(", 
                    RowBox[{"a", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", 
                    SuperscriptBox["y", "2"]], ")"}], "n"], " ", 
                    RowBox[{"exp", "(", 
                    RowBox[{"-", 
                    FractionBox["b", "y"]}], ")"}]}], ")"}], HoldForm], 
                    ")"}]}], TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], "\[LongEqual]", 
              TagBox[
               FractionBox[
                RowBox[{"b", "-", 
                  RowBox[{"2", " ", "n", " ", "y"}]}], 
                SuperscriptBox["y", "2"]], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"log", "(", "x", ")"}], "\" \"", 
                "\"is the natural logarithm\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Factor[(b - 2 n y)/y^2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"-", 
               FractionBox[
                RowBox[{
                  RowBox[{"2", " ", "n", " ", "y"}], "-", "b"}], 
                SuperscriptBox["y", "2"]]}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(b - 2 n y)/y^2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["b", 
                SuperscriptBox["y", "2"]], "-", 
               FractionBox[
                RowBox[{"2", " ", "n"}], "y"]}], Identity], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Roots", "scanner" -> "Reduce", "id" -> "LocusSolution",
      "position" -> "400", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[(b - 2 n y)/y^2 == 0, {b, n, y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"b", "\[LongEqual]", "0"}], 
                    RowBox[{"n", "\[LongEqual]", "0"}], 
                    RowBox[{"y", "\[NotEqual]", "0"}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[(b - 2 n y)/y^2 == 0, {b, n, y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"n", "\[NotEqual]", "0"}], 
                    RowBox[{"y", "\[LongEqual]", 
                    TagBox[
                    FractionBox["b", 
                    RowBox[{"2", " ", "n"}]], Identity]}], 
                    RowBox[{"b", "\[NotEqual]", "0"}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Property as a function", "scanner" -> 
     "FunctionProperties", "id" -> "PropertyAsAFunction", "position" -> "500",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Parity"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"even\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[D[Log[a (1/y^2)^n Exp[-b/y]], y], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox[
                    RowBox[{"b", "-", 
                    RowBox[{"2", " ", "n", " ", "y"}]}], 
                    SuperscriptBox["y", "2"]], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"b", "+", 
                    RowBox[{"2", " ", "n", " ", "y", " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], "y"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Limit", "scanner" -> "GlobalExtrema", "id" -> "Limit", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Limit[(b - 2 n y)/y^2, {y -> -Infinity, y -> Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 UnderscriptBox["lim", 
                  RowBox[{"y", "\[Rule]", 
                    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}]], 
                 "\[ThinSpace]", 
                 FractionBox[
                  RowBox[{"b", "-", 
                    RowBox[{"2", " ", "n", " ", "y"}]}], 
                  SuperscriptBox["y", "2"]]}], HoldForm], "\[LongEqual]", 
              "0"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`pod36$$, Typeset`pod37$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "3.765", "parsetiming" -> 
     "0.9540000000000001", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12221fcf4i5e3f3e342d00003id96207ib1bi363&redisFailed=true&s=64", "id" -> 
     "MSPa12231fcf4i5e3f3e342d00003cah250685dg24a5", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "64", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa12241fcf4i5e3f3e342d00002ggd3d83fh3egh49&redisFailed=true&s=64", 
     "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "2.6630000000000003", "parsetiming" -> 
     "0.", "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", 
     "host" -> "http://www4c.wolframalpha.com", "server" -> "64", "related" -> 
     "", "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 21, 44, 57.5812963`9.512856271405463}, "Line" -> 9,
     "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7}, Typeset`failedpods$$ = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
   37}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "d/dy(Ln[a*(1/y^2)^n*Exp[-b/y]])"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {332., 338.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa12221fcf4i5e3f3e342d00003id96207ib1bi363&redisFailed=true&s=64", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028006976593804`*^9},ExpressionUUID->"e7ac6f88-7c9f-4419-b883-\
c82771986bff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["b)", "Subsubsection",
 CellChangeTimes->{{3.7028000147739286`*^9, 
  3.702800015727041*^9}},ExpressionUUID->"e30a404d-5785-492a-a5ff-\
5f1560b11c80"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"d", "/", 
   RowBox[{"dy", "(", 
    RowBox[{"Ln", "[", 
     RowBox[{"a", "*", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"2", "*", 
          SuperscriptBox["y", "3"]}]], ")"}], "n"], "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", "b"}], "y"], "]"}]}], "]"}], ")"}]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"cfbbad27-124d-439a-bcfa-0610cb4759f9"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.70280070325813*^9, 
  3.702800716638571*^9}},ExpressionUUID->"ac60e830-af15-4912-984b-\
c85f0c7b6f13"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "d/dy(Ln[a*(1/(2*y^3))^n*Exp[-b/y]])", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Log[(a (y^(-3))^n)/(2^n E^(b/y))], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{"log", "(", 
                    RowBox[{"a", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["y", "3"]}]], ")"}], "n"], " ", 
                    RowBox[{"exp", "(", 
                    RowBox[{"-", 
                    FractionBox["b", "y"]}], ")"}]}], ")"}], HoldForm], 
                    ")"}]}], TraditionalForm], Format[#, TraditionalForm]& ], 
               TraditionalForm], "\[LongEqual]", 
              TagBox[
               FractionBox[
                RowBox[{"b", "-", 
                  RowBox[{"3", " ", "n", " ", "y"}]}], 
                SuperscriptBox["y", "2"]], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"log", "(", "x", ")"}], "\" \"", 
                "\"is the natural logarithm\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Alternate form", "scanner" -> "Simplification", "id" -> 
     "AlternateForm", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Factor[(b - 3 n y)/y^2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"-", 
               FractionBox[
                RowBox[{
                  RowBox[{"3", " ", "n", " ", "y"}], "-", "b"}], 
                SuperscriptBox["y", "2"]]}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Simplification", "id" -> 
     "ExpandedForm", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(b - 3 n y)/y^2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["b", 
                SuperscriptBox["y", "2"]], "-", 
               FractionBox[
                RowBox[{"3", " ", "n"}], "y"]}], Identity], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Roots", "scanner" -> "Reduce", "id" -> "LocusSolution",
      "position" -> "400", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[(b - 3 n y)/y^2 == 0, {b, n, y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"b", "\[LongEqual]", "0"}], 
                    RowBox[{"n", "\[LongEqual]", "0"}], 
                    RowBox[{"y", "\[NotEqual]", "0"}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[(b - 3 n y)/y^2 == 0, {b, n, y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"n", "\[NotEqual]", "0"}], 
                    RowBox[{"y", "\[LongEqual]", 
                    TagBox[
                    FractionBox["b", 
                    RowBox[{"3", " ", "n"}]], Identity]}], 
                    RowBox[{"b", "\[NotEqual]", "0"}]}, "RowWithSeparators"], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Property as a function", "scanner" -> 
     "FunctionProperties", "id" -> "PropertyAsAFunction", "position" -> "500",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Parity"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"even\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[D[Log[a (1/(2 y^3))^n Exp[-b/y]], y], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox[
                    RowBox[{"b", "-", 
                    RowBox[{"3", " ", "n", " ", "y"}]}], 
                    SuperscriptBox["y", "2"]], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"b", "+", 
                    RowBox[{"3", " ", "n", " ", "y", " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}], "y"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Limit", "scanner" -> "GlobalExtrema", "id" -> "Limit", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Limit[(b - 3 n y)/y^2, {y -> -Infinity, y -> Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 UnderscriptBox["lim", 
                  RowBox[{"y", "\[Rule]", 
                    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}]], 
                 "\[ThinSpace]", 
                 FractionBox[
                  RowBox[{"b", "-", 
                    RowBox[{"3", " ", "n", " ", "y"}]}], 
                  SuperscriptBox["y", "2"]]}], HoldForm], "\[LongEqual]", 
              "0"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`pod36$$, Typeset`pod37$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "3.468", "parsetiming" -> "0.794", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa21442200d8i4ici69gb400002340b376c62g5deg&s=25", "id" -> 
     "MSPa21452200d8i4ici69gb4000041c6gh5g1f5h3idi", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "25", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa21462200d8i4ici69gb4000049af0i697gdc10a3&s=25", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "2.601", "parsetiming" -> "0.", 
     "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "25", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 21, 56, 56.7866962`9.506821438966053}, "Line" -> 
    13, "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
    37}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "d/dy(Ln[a*(1/(2*y^3))^n*Exp[-b/y]])"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{676., {332., 338.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa21442200d8i4ici69gb400002340b376c62g5deg&s=25", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.702801417083561*^9},ExpressionUUID->"6e083bbb-a994-4249-9f5f-\
b50f63ac14c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"d", "/", 
   RowBox[{"dy", "(", 
    RowBox[{"Ln", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["y", "3"]}]], ")"}], "n"], "]"}], ")"}]}], 
  TraditionalForm]], \
"Input",ExpressionUUID->"938e0134-e5fc-42ed-9df8-6c4f4c07fd5e"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.7028010720210047`*^9, 3.7028011125976424`*^9}, {
  3.702801376756317*^9, 
  3.702801381778514*^9}},ExpressionUUID->"1fad26c9-ffea-424d-bbb6-\
1976ae8388bf"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "d/dy(Ln[(1/(2*y^3))^n])", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Log[(y^(-3))^n/2^n], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FormBox[
               TagBox[
                FormBox[
                 RowBox[{
                   FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm], "\[InvisibleApplication]", 
                   RowBox[{"(", 
                    TagBox[
                    RowBox[{"log", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["y", "3"]}]], ")"}], "n"], ")"}], 
                    HoldForm], ")"}]}], TraditionalForm], 
                Format[#, TraditionalForm]& ], TraditionalForm], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{"-", 
                 FractionBox[
                  RowBox[{"3", " ", "n"}], "y"]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"log", "(", "x", ")"}], "\" \"", 
                "\"is the natural logarithm\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Values", "scanner" -> "Sequence", "id" -> "Values", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{"n", "\"\""}, {"0", "0"}, {"1", 
                 TagBox[
                  RowBox[{"-", 
                    FractionBox["3", "y"]}], Identity]}, {"2", 
                 TagBox[
                  RowBox[{"-", 
                    FractionBox["6", "y"]}], Identity]}, {"3", 
                 TagBox[
                  RowBox[{"-", 
                    FractionBox["9", "y"]}], Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata,\
numberdata"}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot3D[(-3 n)/y, {n, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`density$$ = 15, 
                 CalculateUtilities`GraphicsUtilities`Private`max1686$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`max1688$$ = 
                 0.5, CalculateUtilities`GraphicsUtilities`Private`min1685$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min1687$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`xmesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$], 
                    True, "x"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$], 
                    True, "y"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$], 
                    False, "z"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$], 
                    15, "mesh density"}, 1, 30, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1822275$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min1685$\
1822280$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max1686$1822281$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min1687$\
1822282$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max1688$1822283$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`xmesh$\
1822284$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`ymesh$1822285$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`zmesh$\
1822286$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`density$1822287$\
$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`density$$ = 
                    15, CalculateUtilities`GraphicsUtilities`Private`max1686$$\
 = 0.5, CalculateUtilities`GraphicsUtilities`Private`max1688$$ = 0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min1687$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, CalculateUtilities`GraphicsUtilities`Private`xmesh$\
$ = True, CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1822275$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1685$\
1822280$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max1686$\
1822281$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1687$\
1822282$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max1688$\
1822283$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$\
1822284$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$\
1822285$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$\
1822286$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    CalculateUtilities`GraphicsUtilities`Private`density$\
1822287$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Function[Null, 
                    Plot3D[#, #2, #3, Mesh -> 
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    MeshFunctions :> Flatten[{
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, #& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, #2& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, #3& \
, {}]}], 
                    SlotSequence[4]], 
                    HoldAll][(-3) $CellContext`n/$CellContext`y, \
{$CellContext`n, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$]], 
                    1]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$]], 
                    1]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["n", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, BoxRatios -> Automatic, 
                    ImageSize -> 240., PlotRange -> Automatic, ClippingStyle -> 
                    Opacity[0.25], AxesLabel -> {
                    RawBoxes[
                    FormBox["n", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, MeshStyle -> 
                    Opacity[0.45], Mesh -> 20, ColorFunction :> (Blend[{
                    RGBColor[0.628962, 0.149248, 0.135592], 
                    RGBColor[1., 0.634379, 0.186801], 
                    RGBColor[1., 0.895537, 0.582162], 
                    RGBColor[1., 0.995346, 0.826535]}, #3]& ), AxesStyle :> 
                    Directive[
                    GrayLevel[0.65], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BoxStyle :> GrayLevel[0, 0.35]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min1685$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max1686$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min1687$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max1688$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, {{
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    True, "x"}, {True, False}, ControlPlacement -> 5}, {{
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    True, "y"}, {True, False}, ControlPlacement -> 6}, {{
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    False, "z"}, {True, False}, ControlPlacement -> 7}, {{
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    15, "mesh density"}, 1, 30, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 8}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVtuO0zAQbSn3O/wBEs+\
Iln3gBQnosstKC5SkvHc2cRIL1w62sxd+Hjx2kzTbbqWYLqBV+jCqJ83xzJkz03l2JIKk3+\
v11HVjPgoWJ7fw9NSYsZjnouDxh9NcEqWo4Mk1fHbXmJDoXcLgjMTOd9OYPSHnoN35Db4PLCoYaPJN\
U0Y1JWq2LyHPaKRqz0TSY/OTGRMRMPqTPB++Ho1eDnccDMYyAa2J5OpVW8g8k6BI0kOgG8a8Z8C/u+\
OT8vi5YCwkPwrCI6IeGe9UQmxgBAeG+XjferWZuo+\
JaeAxyPjSabLyHLe9QGlJeTol8xzfuJisYVtgkKly3DwoudmkIBf+\
bXwgQhuT89ik7dkS6BfGFaPvvKz+OXcDPL9tCy/FyXriML93DHkDTY+\
JWqXzRes6OUaqrrXRL7i6rPmy1SAvnjL1/\
9IhVXo1jFHbMMj8yNR4vfZW4Xfawoscu34h7ofGfHGOEnDdcKgE90nEBVtE0Ux54CTaPl2VG4fDuFf\
xHaLTp4IVTmDiLPvF9sfjCrzeFEKs3WwL0uH1DAhITowrttzu0pTqcQYSIgO8uK5fNtlU1KF43Nm+\
9pTH1AwwR8im5QnNQbJUd9BR9vWPilvJ5VyTIe8HXJOUyI2iv4P1kYZcHk+\
FZyQhXtDUqzeHVVITkN6yH5QgYQ6cIiT9ZT72m3u4XAmkal+iuqRjcWBLc+\
qfRL8s8CHhqc6aO7bn6PJuW8wmECe16gKaJMvTZntM95tMN25oDnRfEnxL4j/Qu02h2xT+\
6qawsgd3a0K3JnRrQrcmdGvC/7sm2IjxX+k3nA+4Lg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"ContourPlot[(-3 n)/y, {n, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max4682$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`max4684$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min4681$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`min4683$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$], \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$], 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$4028113$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min4681$\
4028114$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4682$4028115$$ = 
                 0, CalculateUtilities`GraphicsUtilities`Private`min4683$\
4028116$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4684$4028117$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max4682$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`max4684$\
$ = 0.5, CalculateUtilities`GraphicsUtilities`Private`min4681$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$4028113$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4681$\
4028114$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4682$\
4028115$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4683$\
4028116$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4684$\
4028117$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    ContourPlot[(-3) $CellContext`n/$CellContext`y, \
{$CellContext`n, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$]], 
                    1]}, {$CellContext`y, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$]], 
                    (
                    Piecewise[{{
                    0. + 1.0690449676496974` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    1.0690449676496974` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$ + 
                    Rational[1, 500], 
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$]], 
                    1]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["n", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AspectRatio -> Automatic,
                     ImageSize -> 240., ClippingStyle -> Automatic, 
                    FrameLabel -> Automatic, RotateLabel -> False, 
                    PlotRangePadding -> 0, ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& ), 
                    FrameStyle :> Directive[
                    GrayLevel[0, 0.5], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4681$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4682$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["n", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 2}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4683$$, \
-0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "min"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 3}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4684$$, 
                    0.5, 
                    Subscript[
                    RawBoxes[
                    FormBox["y", TraditionalForm]], "max"]}, -1, 1, ImageSize -> 
                    Tiny, ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/APkPiMYBuCL0hAB2PSgJKU7/\
XiS2rh2sF2tsGfB5/dJM3aVYrpAE3ph1N9aR7fPffc9R4dyijt93o9fdmaD5LT9BqeHlozlLNcFoK+\
O8kVaM2kSC/hs5vWxGB2gZMfQL3vqjXvpZoR48+\
v8H3Ck4ITA18N48ww0JM9RfIpS3TtGSl2ZH8y4TIhnP2ExztPt168fL7tYTCWETEGlNDbbSHzqSIa0\
h4CXbHmLSfimz8+KI+fCs5j+\
F6ASEDfs96xItTCSEE45hN868Vm6jYmZoigRNFzp8nJc9j2Am0UE9kYZjm+\
cTZZz9oCE5Vpz82dkpt1CvLhX8cHMnYxeY9L2p0dgWFhXDD6Tsvqn3M3wPPrtvBKHq8mDvN7w5E3Yt\
gR6GU6n7Suk2ek6loX/Zyr85ovGw3y7ClT/\
y8dMG2Ww9hqGwbMDm2NV2tvGX6nLbzMsevn4r5rzWfvKAFXDYdKcB8lLfg8imbKAy/\
R9unq3Do8xq2K7xidIRWscCIbZ9kvrj/uV+D1phBj7SYbkI6oZ0AEOVgXddzusoyZ4ZQokljg+\
XX9ssnGsg4l4M72tWeCMjvAPCHrlic0++lC3YlJpl/+qLiVXE41GfK+LwxkoNaK/\
gbWR1lyBR3LwEhivKCp12AOq6RGRAXLflCCxDkRDCHZL/tx3/\
zDxUogVXsK1aU8iwNXmpPwJPplgQ9AZGba3LEDR1dw22I2kTyuVRexNF2cNptjut9kunFDc6CHkhBa\
kvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/AdgjuIY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Interactive plot", "scanner" -> "Sequence", "id" -> 
     "Plots", "position" -> "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`SequenceScanner`Private`iv$1283379$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 CalculateScan`SequenceScanner`Private`nn$1283379$$ = 3, 
                 CalculateScan`SequenceScanner`Private`xmax2$1283379$$ = 1.02,
                  CalculateScan`SequenceScanner`Private`xmin2$1283379$$ = \
-1.02, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`SequenceScanner`Private`nn$1283379$$], 
                    3, 
                    Style["n", Italic]}, 0, 6, 1}, {{
                    Hold[CalculateScan`SequenceScanner`Private`nn$1283379$$], 
                    3, 
                    Style["n", Italic]}, 0, 6}, {{
                    Hold[CalculateScan`SequenceScanner`Private`iv$1283379$$], 
                    True, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1283380["integer `1` only", {
                    Style["n", Italic]}]}, {True, False}}, {{
                    Hold[
                    CalculateScan`SequenceScanner`Private`xmin2$1283379$$], \
-1.02, 
                    Subscript[
                    Defer[$CellContext`y], 
                    "min"]}, -2.04, -0.010199999999999987`}, {{
                    Hold[
                    CalculateScan`SequenceScanner`Private`xmax2$1283379$$], 
                    1.02, 
                    Subscript[
                    Defer[$CellContext`y], "max"]}, 0., 2.04}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    
                    PaneSelector[{
                    True -> Manipulate`Place[1], False -> 
                    Manipulate`Place[2]}, 
                    Dynamic[
                    CalculateScan`SequenceScanner`Private`iv$1283379$$]], 
                    Manipulate`Place[3]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Manipulate`Place[4], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[5], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1285187$$ = 
                 False, CalculateScan`SequenceScanner`Private`nn$1283379$\
1285192$$ = 0, CalculateScan`SequenceScanner`Private`iv$1283379$1285193$$ = 
                 False, CalculateScan`SequenceScanner`Private`xmin2$1283379$\
1285194$$ = 0, CalculateScan`SequenceScanner`Private`xmax2$1283379$1285195$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`SequenceScanner`Private`iv$1283379$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, CalculateScan`SequenceScanner`Private`nn$1283379$$ = 
                    3, CalculateScan`SequenceScanner`Private`xmax2$1283379$$ = 
                    1.02, CalculateScan`SequenceScanner`Private`xmin2$1283379$\
$ = -1.02}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1285187$\
$, False], 
                    Hold[
                    CalculateScan`SequenceScanner`Private`nn$1283379$$, 
                    CalculateScan`SequenceScanner`Private`nn$1283379$1285192$$\
, 0], 
                    Hold[
                    CalculateScan`SequenceScanner`Private`iv$1283379$$, 
                    CalculateScan`SequenceScanner`Private`iv$1283379$1285193$$\
, False], 
                    Hold[
                    CalculateScan`SequenceScanner`Private`xmin2$1283379$$, 
                    CalculateScan`SequenceScanner`Private`xmin2$1283379$\
1285194$$, 0], 
                    Hold[
                    CalculateScan`SequenceScanner`Private`xmax2$1283379$$, 
                    CalculateScan`SequenceScanner`Private`xmax2$1283379$\
1285195$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  Plot[(-3) 
                    CalculateScan`SequenceScanner`Private`nn$1283379$$/$\
CellContext`y, {$CellContext`y, 
                    CalculateScan`SequenceScanner`Private`xmin2$1283379$$, 
                    CalculateScan`SequenceScanner`Private`xmax2$1283379$$}, 
                    PlotRange -> Automatic, ImageSize -> {300, Automatic}, 
                    Epilog -> Style[
                    Text[
                    Row[{
                    Style["n", Italic], "=", 
                    If[
                    CalculateScan`SequenceScanner`Private`iv$1283379$$, 
                    CalculateScan`SequenceScanner`Private`nn$1283379$$, 
                    SetPrecision[
                    If[
                    CalculateScan`SequenceScanner`Private`nn$1283379$$ != 0, 
                    CalculateScan`SequenceScanner`Private`nn$1283379$$, 
                    "0.00"], 
                    Which[
                    Abs[CalculateScan`SequenceScanner`Private`nn$1283379$$] < 
                    1/10, 1, 
                    Abs[CalculateScan`SequenceScanner`Private`nn$1283379$$] < 
                    1, 2, True, 3]]]}], 
                    Scaled[{0.1, 0.9}]], 12]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`SequenceScanner`Private`nn$1283379$$, 3, 
                    Style["n", Italic]}, 0, 6, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 1}, {{
                    CalculateScan`SequenceScanner`Private`nn$1283379$$, 3, 
                    Style["n", Italic]}, 0, 6, ImageSize -> Tiny, 
                    ControlPlacement -> 2}, {{
                    CalculateScan`SequenceScanner`Private`iv$1283379$$, True, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
1283380["integer `1` only", {
                    Style["n", Italic]}]}, {True, False}, ImageSize -> Tiny, 
                    ControlPlacement -> 3}, {{
                    CalculateScan`SequenceScanner`Private`xmin2$1283379$$, \
-1.02, 
                    Subscript[
                    Defer[$CellContext`y], 
                    "min"]}, -2.04, -0.010199999999999987`, ImageSize -> Tiny,
                     ControlPlacement -> 4}, {{
                    CalculateScan`SequenceScanner`Private`xmax2$1283379$$, 
                    1.02, 
                    Subscript[
                    Defer[$CellContext`y], "max"]}, 0., 2.04, ImageSize -> 
                    Tiny, ControlPlacement -> 5}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    
                    PaneSelector[{
                    True -> Manipulate`Place[1], False -> 
                    Manipulate`Place[2]}, 
                    Dynamic[
                    CalculateScan`SequenceScanner`Private`iv$1283379$$]], 
                    Manipulate`Place[3]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Manipulate`Place[4], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[5], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVt9v0zAQbikwfv/\
6D5B4RmzlYS9IsI6NSQNKUt7rJZfEwrWD7WyDfx58dpM0a1cppgM0pQ+n+tJ8vvvuu+s9PxFB0u/\
1euqmMR8Ei5MtPD0zZiRmuSh4/P48l6AUFTy5gc/\
uGROC3gdGfkDsfLeNORByRrQ7v8H3CYsKRjR81ZRRTUFNDyXJMxqp2jOW9NT8ZMpERBj9CS+\
2d3aHw91XDgZjGROtQXI1bAuZZ5IoSHoIdMuYPUb4N3d8Wh4/FYyF8L0AHoF6bLwTSWIDIzhhmI/\
3rdebqQeYmCY8JjK+cpqsPEdtL1BaUp5OYJbjG5eTtd0WmMhUOW4eltysU5AL/w4+\
EKGNyXls0vZsCfQL45rRd1FW/5y7AZ7ftoWX4mw1cZjfO4a8EU1PQS3T+\
bJ1nRwjVdfa6OdcXdV82WiQl0+Z+n/pmCq9HMZO2zBgdmJqvFp7y/Cv28KLHLt+\
Lu5Hxnx2jhJw1XCoBPdRxAWbR9FMeeAk2j5dlRuHw7hf8R2i06eCFU5g4iz7xfbHkwq83hRCrN10A9\
Lh9QwIIAfjii23+zSlepQRSSIDPL+uXzbZRNSheNzZvvaUx9QMMEfIuuUJzVGyUHeio+\
zLHxW3ksuFJkPej7iGFORa0d/F+khDLo8nwjOSEC9o6tWbwyqpMZHesh+UIGFOOEVI+\
st87Df3cLESSNWhRHVJx+LAlubcP4l+WeBj4KnOmju25+\
jyblvMJhBnteoCmiSL02ZzTPebTDduaA50XxJ8S+I/0LtNodsU/uqmsLQHd2tCtyZ0a0K3JnRrwv+\
7JtiI8V/pN/DhuGY="]]}; Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Root", "scanner" -> "Reduce", "id" -> "LocusSolution", 
     "position" -> "600", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[(-3 n)/y == 0, {n, y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   TemplateBox[{",   ", "\",   \"", 
                    RowBox[{"y", "\[NotEqual]", "0"}], 
                    RowBox[{"n", "\[LongEqual]", "0"}]}, "RowWithSeparators"],
                    BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Properties as a real function", "scanner" -> 
     "FunctionProperties", "id" -> "PropertiesAsARealFunction", "position" -> 
     "700", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "Domain"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"{\"", 
              RowBox[{"y", "\[Element]", 
                TagBox["\[DoubleStruckCapitalR]", 
                 Function[{}, Reals]]}], "\" : \"", 
              RowBox[{"y", "\[NotEqual]", "0"}], "\"}\""}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Parity"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"odd\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> "\[DoubleStruckCapitalR] is the set of real numbers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Reals.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/R.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TagBox["\[DoubleStruckCapitalR]", 
                 Function[{}, Reals]], "\" \"", 
                "\"is the set of real numbers\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", 
                 "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, 
                   "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"]}}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {
                FontFamily -> "Times", "Graphics3D"}}}]}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Indefinite integral", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[D[Log[(1/(2 y^3))^n], y], y]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"3", " ", "n"}], "y"]}], 
                   RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"-", "3"}], " ", "n", " ", 
                    RowBox[{"log", "(", "y", ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "IndefiniteIntegral__Step-by-step solution"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Limit", "scanner" -> "GlobalExtrema", "id" -> "Limit", 
     "position" -> "900", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Limit[(-3 n)/y, {y -> -Infinity, y -> Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 UnderscriptBox["lim", 
                  RowBox[{"y", "\[Rule]", 
                    RowBox[{"\[PlusMinus]", "\[Infinity]"}]}]], 
                 "\[ThinSpace]", 
                 RowBox[{"-", 
                   FractionBox[
                    RowBox[{"3", " ", "n"}], "y"]}]}], HoldForm], 
              "\[LongEqual]", "0"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Definite integral over a square of edge length 2 L", 
     "scanner" -> "InterestingMultiDimensionalDefiniteIntegrals", "id" -> 
     "DefiniteIntegral", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Integrate[(-3 n)/y, {n, -L, L}, {y, -L, L}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"-", "L"}], "L"], 
                 RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    RowBox[{"-", "L"}], "L"], 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"3", " ", "n"}], "y"]}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "n"}]}]}]}], HoldForm], 
              "\[LongEqual]", "0"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", 
               "Graphics", $CellContext`GraphicsBoxOptionsDefaultAxesStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsAxes"], \
$CellContext`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsTicks"], \
$CellContext`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, 
                 "GraphicsFrame"], \
$CellContext`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`pod37$$, Typeset`pod38$$, 
   Typeset`pod39$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False, False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`aux39$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "3.015", "parsetiming" -> "0.463", 
     "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa19741h387f3ahf3379ia00001h57f3f8bd8fe196&s=7", "id" -> 
     "MSPa19751h387f3ahf3379ia0000112330f029i27iei", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "7", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa19761h387f3ahf3379ia0000296bi77h12hg579h&s=7", "version" -> "2.6"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "D", "timedout" -> "InterestingMultiDimensionalDefiniteIntegrals", 
     "timedoutpods" -> "", "timing" -> "2.071", "parsetiming" -> "0.", 
     "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "7", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2017, 5, 3, 21, 56, 26.7698881`9.180221474053672}, "Line" -> 
    12, "SessionID" -> 18268404971457140038}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
    37, 38, 39}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "d/dy(Ln[(1/(2*y^3))^n])"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{676., {1662., 1668.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa19741h387f3ahf3379ia00001h57f3f8bd8fe196&s=7", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7028013868636117`*^9},ExpressionUUID->"ae789230-4d25-4ad1-95e9-\
e6106ebc5b80"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 833},
WindowMargins->{{Automatic, 259}, {25, Automatic}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 49, "Subsection", "ExpressionUUID" -> \
"e577ea20-baa8-410d-af1c-b6e2bf6aad71"],
Cell[CellGroupData[{
Cell[767, 29, 157, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"46e7356a-21e4-4172-b7b6-0d277582edd1"],
Cell[CellGroupData[{
Cell[949, 36, 331, 8, 30, "Input", "ExpressionUUID" -> \
"e920ca5d-80b1-49fc-813a-51a5c0ad406b"],
Cell[1283, 46, 254, 6, 30, "Output", "ExpressionUUID" -> \
"75684016-3a60-41b9-8525-3fb564ac40c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1586, 58, 157, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"b23745f7-a750-4926-9dfc-2da7b7f1e3dd"],
Cell[CellGroupData[{
Cell[1768, 65, 189, 3, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"41b8d7f0-8504-4c37-b947-262d1ac6b784"],
Cell[1960, 70, 13686, 260, 216, "Print", "ExpressionUUID" -> \
"7a774984-7276-48ed-9105-ee9b47cc32a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15695, 336, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"84b4974b-5851-40fa-9f0c-b0d4444976cd"],
Cell[CellGroupData[{
Cell[15875, 343, 612, 15, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"bb1fe00e-6843-40c0-87a6-17754ee54fde"],
Cell[16490, 360, 95919, 1720, 872, "Print", "ExpressionUUID" -> \
"821660bc-0288-46c6-b3b2-44e8c7f644bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112446, 2085, 620, 17, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"12207c63-cef7-43b3-abd6-e698528dc350"],
Cell[113069, 2104, 91300, 1655, 868, "Print", "ExpressionUUID" -> \
"7fe69913-33ac-47e1-8594-7852b7a68f6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204406, 3764, 732, 21, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"c34b6a52-a94d-41f9-9ac7-4ea9a53bff71"],
Cell[205141, 3787, 14874, 287, 290, "Print", "ExpressionUUID" -> \
"e6b9ff86-d55f-42d2-9142-f43d2d0693e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220052, 4079, 874, 26, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"4db21884-dd0c-419c-97b0-d0fc460df016"],
Cell[220929, 4107, 15424, 300, 290, "Print", "ExpressionUUID" -> \
"24777a0a-a0b8-45c6-a369-f1a139a105a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236390, 4412, 525, 12, 46, "WolframAlphaLong", "ExpressionUUID" -> \
"96535875-0120-475e-bd6d-516aec787b2f"],
Cell[236918, 4426, 15564, 301, 290, "Print", "ExpressionUUID" -> \
"a26931a8-80d1-41c5-a6e3-ca0b5e4e1ac8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252519, 4732, 470, 13, 79, "Input", "ExpressionUUID" -> \
"162a15f2-93b5-4439-a15c-a86e51072129"],
Cell[252992, 4747, 189, 6, 72, "Output", "ExpressionUUID" -> \
"76f09f4b-8ca4-429a-8306-7e25c8ec062b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253218, 4758, 190, 5, 71, "Input", "ExpressionUUID" -> \
"7a45d87b-b1b5-4597-80f9-a6f6d64ecd62"],
Cell[253411, 4765, 151, 3, 30, "Output", "ExpressionUUID" -> \
"6da0f2be-bdc2-4715-a764-7bf5c1ddeac9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253611, 4774, 157, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"ce86f74a-7b6b-491a-878b-2e5bf45fec9e"],
Cell[CellGroupData[{
Cell[253793, 4781, 384, 11, 58, "Input", "ExpressionUUID" -> \
"74932f27-5ca5-4714-8569-21f2835433ee"],
Cell[254180, 4794, 286, 9, 58, "Output", "ExpressionUUID" -> \
"5e0210ed-2da3-41ee-a0f6-e4930d4e4ed0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254503, 4808, 359, 10, 68, "Input", "ExpressionUUID" -> \
"5c9c8d10-daae-4645-b45f-4e4d1f67223c"],
Cell[254865, 4820, 214, 6, 53, "Output", "ExpressionUUID" -> \
"675f53b6-1281-4ae2-9872-58d7817ce111"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255128, 4832, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"44898d21-a4dd-4181-adda-531992b54da8"],
Cell[CellGroupData[{
Cell[255308, 4839, 701, 19, 59, "WolframAlphaLong", "ExpressionUUID" -> \
"56502948-c756-496b-a4b3-70ab7782e674"],
Cell[256012, 4860, 52689, 1024, 892, "Print", "ExpressionUUID" -> \
"06daf38b-8292-4a50-a5bd-482a8662e62d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308750, 5890, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"29c9e041-d56d-4e7e-8496-bfc6d7945f05"],
Cell[CellGroupData[{
Cell[308930, 5897, 190, 3, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"c420ffb1-4bfd-47e1-bf53-8a3db4814b51"],
Cell[309123, 5902, 13719, 262, 222, "Print", "ExpressionUUID" -> \
"8f40d7ef-9002-4ed8-9c62-2dcd2720cabb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322879, 6169, 622, 15, 46, "WolframAlphaLong", "ExpressionUUID" -> \
"0eae06a9-5cf0-4316-93fd-23de94aab9c9"],
Cell[323504, 6186, 72944, 1351, 862, "Print", "ExpressionUUID" -> \
"def523db-151a-4a84-a386-1697b733529d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396485, 7542, 518, 16, 46, "WolframAlphaLong", "ExpressionUUID" -> \
"131120c4-d814-4e8f-8779-463fb8b41402"],
Cell[397006, 7560, 54590, 1048, 864, "Print", "ExpressionUUID" -> \
"4f90de8f-abfd-4e82-956c-fdae02b06cd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451633, 8613, 884, 22, 58, "WolframAlphaLong", "ExpressionUUID" -> \
"a4ddc4c6-7c13-47d5-b41b-6b3b89efa535"],
Cell[452520, 8637, 15547, 300, 356, "Print", "ExpressionUUID" -> \
"0d01309e-648a-4945-9a93-867c96525cbb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468128, 8944, 160, 3, 49, "Subsection", "ExpressionUUID" -> \
"27be2ccd-25e5-4f57-82a4-256311d56b7a"],
Cell[CellGroupData[{
Cell[468313, 8951, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"ecd0138e-47b1-4a9a-9f3d-49f3457268ef"],
Cell[CellGroupData[{
Cell[468493, 8958, 451, 12, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"f86505f0-eba4-47e2-9be8-fd9737d34619"],
Cell[468947, 8972, 10704, 194, 138, "Print", "ExpressionUUID" -> \
"4fb8a587-371b-45bd-bb2c-8e92166af414"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479688, 9171, 530, 17, 53, "WolframAlphaLong", "ExpressionUUID" -> \
"a67f49cc-5cc4-4541-9f1d-f328e031ddd4"],
Cell[480221, 9190, 13771, 264, 230, "Print", "ExpressionUUID" -> \
"e5fbc8e7-8363-41a6-b02b-7aa43bfe1986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494029, 9459, 598, 18, 52, "WolframAlphaLong", "ExpressionUUID" -> \
"501fe17c-f1cf-4731-aff7-7f22a358f816"],
Cell[494630, 9479, 68909, 1375, 1476, "Print", "ExpressionUUID" -> \
"6355ba4b-4fcd-4634-8856-01e807fd5ca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563576, 10859, 641, 19, 53, "WolframAlphaLong", "ExpressionUUID" -> \
"d15a53ef-37ec-4a99-b7e7-2b43fa76e738"],
Cell[564220, 10880, 11015, 202, 144, "Print", "ExpressionUUID" -> \
"798fab9a-4787-4662-b9b8-30a45bd0b89a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[575296, 11089, 162, 3, 49, "Subsection", "ExpressionUUID" -> \
"43022852-8966-4784-8915-2a7c73882d98"],
Cell[CellGroupData[{
Cell[575483, 11096, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"13dc064c-fa20-4af3-bfa7-c0e9ae05f61c"],
Cell[CellGroupData[{
Cell[575663, 11103, 661, 18, 44, "WolframAlphaLong", "ExpressionUUID" -> \
"1413d0eb-958e-4392-93e9-77893a14f1fe"],
Cell[576327, 11123, 63901, 1284, 1418, "Print", "ExpressionUUID" -> \
"d5a1823f-a2b7-416f-9c8b-cc83735015a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640289, 12414, 210, 4, 49, "Subsection", "ExpressionUUID" -> \
"92e125c4-04a3-4baf-89a5-3d989bf6edf2"],
Cell[CellGroupData[{
Cell[640524, 12422, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"7fe481fe-eeef-450b-ab70-5eab3f09b1dc"],
Cell[CellGroupData[{
Cell[640704, 12429, 920, 22, 51, "WolframAlphaLong", "ExpressionUUID" -> \
"f303bffb-8534-4809-842f-bd84785d4586"],
Cell[641627, 12453, 30089, 618, 680, "Print", "ExpressionUUID" -> \
"e7ac6f88-7c9f-4419-b883-c82771986bff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671765, 13077, 155, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"e30a404d-5785-492a-a5ff-5f1560b11c80"],
Cell[CellGroupData[{
Cell[671945, 13084, 648, 19, 51, "WolframAlphaLong", "ExpressionUUID" -> \
"ac60e830-af15-4912-984b-c85f0c7b6f13"],
Cell[672596, 13105, 30049, 617, 680, "Print", "ExpressionUUID" -> \
"6e083bbb-a994-4249-9f5f-b50f63ac14c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702682, 13727, 556, 16, 51, "WolframAlphaLong", "ExpressionUUID" -> \
"1fad26c9-ffea-424d-bbb6-1976ae8388bf"],
Cell[703241, 13745, 83487, 1682, 3340, "Print", "ExpressionUUID" -> \
"ae789230-4d25-4ad1-95e9-e6106ebc5b80"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

